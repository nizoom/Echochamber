{"version":3,"sources":["components/instructions/instructions.js","components/input/randomize/getrandomacctbtn.js","components/input/blob/blob.js","components/input/input.js","components/twitterResults/scrollup.js","components/twitterResults/twitterResults.js","media/tweetgifv7.gif","components/tooltip/tooltip.js","components/wordcloud/wordcloud.js","components/wordcloud/initcloudbtn.js","components/backbtn/backbtn.js","components/notfound/searchfailed.js","components/currentlyviewing/currentlyviewing.js","components/homebtn/homebtn.js","App.js","reportWebVitals.js","index.js"],"names":["Instructions","className","Typography","variant","style","fontSize","marginTop","padding","GetRandomAcctBtn","props","classes","makeStyles","theme","root","color","borderColor","borderWidth","height","useStyles","allNames","Button","size","onClick","index","min","max","console","log","result","Math","random","floor","getRandomArbitrary","chosenName","sendName","BlobLoader","instenity","animation","width","id","cx","cy","fill","r","Input","useState","inputContent","setInputContent","validity","setValidity","passSubmitted","name","handleInput","loadingStatus","Grid","container","direction","justify","spacing","item","xs","randomeName","fontWeight","margin","TextField","onChange","event","usernameAttempt","target","value","backgroundColor","borderRadius","opacity","label","InputLabelProps","test","length","ScrollUp","window","scrollTo","top","behavior","TwitterResults","tweets","results","displayTweets","useRef","map","tweet","href","handle","username","undefined","replace","toLowerCase","rel","author","text","timeElapsed","indexOf","toString","ToolTip","HtmlTooltip","withStyles","tooltip","maxWidth","typography","pxToRem","border","Tooltip","title","Fragment","word","frequency","paddingLeft","paddingRight","MyCloud","createMuiTheme","h2","breakpoints","up","React","clicked","setClick","activateToolTip","setFontSize","innerWidth","large","freq","determineFrequency","innerHeight","setDimensions","useEffect","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","counter","droplets","droplet","ThemeProvider","authorName","src","gif","alt","float","screen","CloudBtn","cloudStatus","setCloudStatus","returnClickToParent","BackBtn","position","handler","marginLeft","SearchFailed","issue","CurrentlyViewing","background","changeStatus","status","marginBottom","HomeBtn","left","App","loading","setLoading","setAuthorName","data","setData","cloudText","setCloudText","appCSS","setAppCSS","successfulQuery","setsuccessfulQuery","currentlyReading","setCurrentlyReading","returnFromCurrentlyViewing","newStatus","lg","submittedName","fetch","then","res","json","Array","isArray","wordCloudtext","hasOwnProperty","notFound","goBack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d93b4c2.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport \"./instructions.css\"\n\n\nconst Instructions = () => {\n    return (\n        <div className=\"instructionsWrapper\">\n            <header>\n                <Typography variant=\"h1\" style={{ fontSize: \"3em\", marginTop: \"15px\" }}>\n                    Welcome to The Echo Chamber </Typography>\n            </header>\n            <Typography variant=\"h2\" style={{ fontSize: \"2em\", padding: \"0 5px 0 5px\" }}\n            > Enter a Twitter name, see what they see </Typography>\n        </div>\n\n\n    )\n}\n\nexport default Instructions","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n// instead of seperate fetch then pass the predetermined name from list to the fetch request \n// in app.js\n\nconst GetRandomAcctBtn = (props) => {\n\n    const useStyles = makeStyles(theme => ({ //button styling\n\n        root: {\n            color: \"#89EBCF\",\n            borderColor: \"#89EBCF\",\n            fontSize: \"1.2em\",\n            borderWidth: \"5px\",\n            height: \"70px\",\n            // [theme.breakpoints.up('xs')]: {\n            //     marginTop: '10px',\n            // },\n\n            '&:hover': {\n                color: \"#89EBCF\",\n                borderColor: \"#89EB90\",\n                fontSize: \"1.2em\",\n                borderWidth: \"5px\",\n            },\n\n        }\n    }));\n\n\n\n\n    const classes = useStyles();\n\n    const allNames = [\n        \"BarackObama\", \"justinbieber\", \"katyperry\", \"rihanna\", \"Cristiano\", \"taylorswift13\", \"ladygaga\",\n        \"ArianaGrande\", \"KimKardashian\", \"cnnbrk\", \"elonmusk\", \"britneyspears\", \"BillGates\",\n        \"BIGKRIT\", \"neymarjr\", \"shakira\", \"jimmyfallon\", \"nytimes\", \"KingJames\", \"SrBachchan\",\n        \"NASA\", \"JLo\", \"Oprah\", \"princeonyeji1\", \"Drake\", \"realmadrid\", \"espn\", \"FCBarcelona\",\n        \"Harry_Styles\", \"KevinHart4real\", \"BTS_twt\", \"wizkhalifa\", \"ChampionsLeague\", \"JoeBiden\",\n        \"tylerthecreator\", \"deepikapadukone\", \"premierleague\", \"MesutOzil1088\", \"NatGeo\", \"TheEconomist\",\n        \"danieltosh\", \"Reuters\", \"coldplay\", \"kendricklnation\", \"BernieSanders\", \"AOC\", \"KamalaHarris\", \"chooselove\", \"amnestyusa\",\n        \"VICE\"\n    ]\n\n\n    function getRandomArbitrary(min, max) {\n        console.log(\"fired\")\n        const result = Math.random() * (max - min) + min;\n        return Math.floor(result)\n\n    }\n\n\n\n    const getRandomName = () => {\n        const index = getRandomArbitrary(0, 49);\n        const chosenName = allNames[index];\n        console.log(\"random Name fired\")\n        props.sendName(chosenName)\n    }\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" size=\"large\"\n\n                onClick={getRandomName}\n                className={classes.root}\n            > Random Account!  </Button>\n        </div>\n    )\n}\n\nexport default GetRandomAcctBtn;","import React from \"react\";\nimport Goo from 'gooey-react'\nimport \"./blob.css\"\n\nconst BlobLoader = () => {\n    return (\n        <Goo instenity=\"weak\" style={{ animation: 'left 10s linear infinite' }}>\n            <svg width=\"192\" height=\"192\">\n\n                <g id=\"parent\">\n                    <circle cx=\"37%\" cy=\"37%\" fill=\"#16AE89\" r=\"32\" style={{ animation: 'right 3s linear infinite' }} />\n                    <circle cx=\"63%\" cy=\"63%\" fill=\"mediumorchid\" r=\"32\" />\n\n\n                </g>\n\n            </svg>\n\n        </Goo>\n    )\n}\n\nexport default BlobLoader\n\n\n\n\n{/* \n\n\n    width: \"450px\", height: \"600px\",\n                    overflow: \"hidden\"\n\n\n\n                          <Goo instenity=\"weak\" style={{ animation: 'left 4s linear infinite' }}>\n                    <svg width=\"192\" height=\"192\">\n\n                        <g id=\"parent\">\n                            <circle cx=\"37%\" cy=\"37%\" fill=\"orchid\" r=\"32\" style={{ animation: 'right 1s linear infinite' }} />\n                            <circle cx=\"63%\" cy=\"63%\" fill=\"mediumorchid\" r=\"32\" />\n                          \n\n                        </g>\n\n                    </svg>\n\n                </Goo>\n                        */}\n","import React, { useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./input.css\"\nimport Grid from '@material-ui/core/Grid';\n\nimport GetRandomAcctBtn from \"./randomize/getrandomacctbtn\"\nimport BlobLoader from \"./blob/blob\";\n\n\nconst Input = (props) => {\n\n    const useStyles = makeStyles(theme => ({ //button styling\n        root: {\n            color: \"#89EBCF\",\n            borderColor: \"#89EBCF\",\n            fontSize: \"1.5em\",\n            borderWidth: \"5px\",\n            height: \"70px\",\n            // [theme.breakpoints.up('xs')]: {\n            //     marginTop: '10px',\n            // },\n\n\n            '&:hover': {\n                color: \"#89EBCF\",\n                borderColor: \"#89EB90\",\n                fontSize: \"1.5em\",\n                borderWidth: \"5px\",\n            },\n\n        }\n    }));\n\n    const classes = useStyles();\n\n    const [inputContent, setInputContent] = useState(\"\");\n\n    const [validity, setValidity] = useState(true);\n\n    const handleChange = (event) => {\n        let usernameAttempt = event.target.value;\n        setInputContent(usernameAttempt);\n    }\n\n    const passSubmitted = (name) => {\n        console.log(\"passed\")\n        props.handleInput(name);\n        //reset for next search\n        setValidity(true)\n    }\n\n    const checkValidity = () => {\n\n\n\n        console.log(validity)\n\n        const regex = /[^a-zA-Z\\d\\s_]/\n        // if inputContent is empty -> invalid \n        if (inputContent === \"\") {\n            console.log(\"stopped 1\")\n            return setValidity(false);\n        }\n        // if inputContent contains non alphanumeric chars except dashes  -> invalid \n\n        if (regex.test(inputContent)) {\n            console.log(\"stopped 2\")\n            return setValidity(false);\n        }\n\n        // if inputContent is less than 4 and no more than 15 chars long \n        if (inputContent.length < 4 || inputContent.length > 15) {\n            console.log(\"stopped 3\")\n            return setValidity(false);\n        }\n\n        passSubmitted(inputContent) // no if needed because of the returns earlier on would \n        //catch everything else \n\n        // if (validity) { // problem is its not valid here \n        //     console.log(validity)\n        //     passSubmitted(inputContent)\n        // }\n\n        //reset for next search\n\n        return setValidity(true)\n    }\n\n\n\n    const getRandomNameFromChild = (randomeName) => {\n        setInputContent(randomeName)\n        console.log(randomeName)\n        passSubmitted(randomeName)\n    }\n\n    return (\n\n        <div className=\"inputWrapper\">\n\n            {props.loadingStatus ? <BlobLoader /> :\n                <Grid container direction=\"row\" justify=\"space-evenly\" spacing={4}>\n\n\n\n\n                    <Grid item xs={12}>\n\n\n\n                        <GetRandomAcctBtn sendName={getRandomNameFromChild}\n\n                        />  <p style={{\n                            color: \"#E1CEEC\", fontWeight: \"600\", padding: \"0\", margin: \"0\", marginTop: \"20px\",\n                            fontSize: \"1.2em\"\n                        }}\n\n\n                        > OR </p>\n                    </Grid>\n\n                    <Grid item >\n                        <TextField id=\"standard-basic\"\n\n                            name=\"twitterInput\"\n                            onChange={handleChange}\n                            style={{\n                                backgroundColor: \"#C9B7E2\",\n                                borderRadius: \"5%\",\n                                opacity: \".8\"\n                            }}\n                            label=\"TwitterHandle\"\n                            InputLabelProps={{ className: \"textfield___label\" }}\n                        />\n                    </Grid>\n\n                    <Grid item>\n                        <Button variant=\"outlined\" color=\"primary\" size=\"large\"\n                            onClick={checkValidity}\n                            className={classes.root}\n                        > Submit </Button>\n\n                        {validity ? null : <p\n                            className=\"error__message\"\n                        > Handle must be 4 to 15 characters of only numbers, letters, and underscores </p>}\n                    </Grid>\n\n\n\n                </Grid>\n            }\n\n        </div >\n    )\n}\n\nexport default Input;","import React from \"react\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport \"./scrollup.css\"\n//import { ShakeSlow } from 'reshake'\n\n\n\n\nconst ScrollUp = (props) => {\n\n\n\n    const scrollUp = () => {\n\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        })\n\n    }\n\n    return (\n        <div>\n\n\n            <button onClick={scrollUp}\n                className=\"scrollUpBtn\">\n                <ArrowUpwardIcon />\n            </button>\n\n\n\n\n\n        </div >\n    )\n}\n\nexport default ScrollUp;","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./twitterResults.css\"\n//import CollapseButton from \"../minimize/minimize\"\nimport ScrollUp from \"./scrollup\";\n\n\nconst TwitterResults = (props) => {\n\n    // console.log(\"Hi I am Spaced out\".trim())\n\n    const tweets = props.results;\n\n    const [btnStatus, setBtnStatus] = useState(true) // defaults to plus where content is shown\n\n    const content = useRef(\"\");\n\n\n    const changeBtnStatus = () => {\n        setBtnStatus(!btnStatus)\n        // console.log(btnStatus)\n        //console.log(content.current.scrollHeight)\n        //console.log(height);\n\n    }\n\n\n    const convertNameToUrl = (handle) => {\n        // console.log(handle)\n        if (handle === undefined) {\n            return (\"\")\n        } else {\n            const urlReadyHandle = handle.replace(/\\s+/g, '').toLowerCase();\n            //const urlReadyName = authorName.trim().toLowerCase()\n            //console.log(`https://twitter.com/${urlReadyName}`)\n            return \"https://twitter.com/\" + urlReadyHandle\n        }\n\n    }\n\n    const displayTweets = tweets.map((tweet) => {\n\n        return (\n            < div className=\"tweetDiv\" key={tweets.indexOf(tweet).toString()} >\n                <a href={convertNameToUrl(tweet.username)} target=\"_blank\" rel=\"noreferrer\">\n                    <li>\n                        <p className=\"author\">{tweet.author}</p>\n                        <p className=\"tweetText\">{tweet.text} </p>\n                        <p style={{ padding: \"10px\", opacity: \".7\" }}>{tweet.timeElapsed} </p>\n\n                    </li>\n                </a>\n            </div >\n        )\n    }\n    )\n\n    //console.log(props.results)\n\n    return (\n        <div>\n\n            {\n                props.results[0] !== \"No Tweets\" ?\n                    <div>\n\n\n\n                        <div>\n\n                            <div className=\"container\">\n                                <ScrollUp />\n                                <ul>\n                                    {displayTweets}\n                                </ul>\n                            </div >\n                        </div>\n                        : null\n\n                    </div>\n                    :\n                    <p style={{ fontSize: \"2em\", color: \"#89EBCF\" }}> ......</p>\n            }\n        </div >\n\n\n    )\n}\n\nexport default TwitterResults;\n\n\n// <CollapseButton btnClicked={changeBtnStatus} status={btnStatus} />","export default __webpack_public_path__ + \"static/media/tweetgifv7.23060304.gif\";","import React from \"react\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport \"../wordcloud/wordcloud.css\"\n\n\n\n\nconst ToolTip = (props) => {\n\n    const HtmlTooltip = withStyles((theme) => ({\n        tooltip: {\n            backgroundColor: '#f5f5f9',\n            color: 'rgba(0, 0, 0, 0.87)',\n            maxWidth: 220,\n            fontSize: theme.typography.pxToRem(12),\n            border: '1px solid #dadde9',\n            borderRadius: \"15px\"\n        },\n    }))(Tooltip);\n\n\n    return (\n\n        <HtmlTooltip\n            title={\n                <React.Fragment>\n                    <Typography color=\"inherit\">\n                        <i>{props.word} </i> {`is used ${props.frequency} times`}\n\n                    </Typography>\n\n                </React.Fragment>\n            }\n        >\n            <div style={{ fontSize: `${props.frequency * 9.5}px`, fontWeight: \"700\", paddingLeft: \"2px\", paddingRight: \"2px\" }}\n            >{props.word}</div>\n        </HtmlTooltip>\n\n\n\n\n    )\n}\n\nexport default ToolTip;\n\n\n\n\n{/* <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\n{\"It's very engaging. Right?\"} */}\n\n\n\n\n\n //const tTip = <ToolTip frequency={droplet.frequency} word={droplet.word} />\n\n    //     <ToolTip placement=\"right\" trigger={['click']} overlay={<span>tooltip</span>}>\n    //     {droplet.word} is used {droplet.frequency}times\n    // </ToolTip>\n\n\n\n\n\n// import \"./styles.css\";\n// import React from \"react\";\n\n// export default function App() {\n//   const numberOfHeadings = \n//   [{num : 1, value: \"tip1\"}, {num : 2, value: \"tip2\"}, {num : 4, value : \"tip3\" }, \n//   {num: 5, value : \"tip4\"}, {num : 6, value: \"tip6\"}];\n\n//   const handleClick = () => {\n//     console.log(\"show tip\");\n//     setDisplay(!display);\n//   };\n//   const [display, setDisplay] = React.useState(false);\n\n//   const headings = numberOfHeadings.map((num) => (\n//     <div\n//       className=\"clickable\"\n//       key={numberOfHeadings.indexOf(num) + Math.random() * 10}\n//     >\n//       <h2 onClick={handleClick}>Start editing to see some magic happen!</h2>\n//       <div>\n//         {display ? (\n//           <span\n//             style={{\n//               backgroundColor: \"gray\",\n//               padding: \"10px\"\n//             }}\n//           >\n//             {num.value}\n//           </span>\n//         ) : null}\n//       </div>\n//     </div>\n//   ));\n//   return (\n//     <div className=\"App\">\n//       <h1>Hello CodeSandbox</h1>\n\n//       {headings}\n//     </div>\n//   );\n// }\n","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport \"./wordcloud.css\"\nimport gif from \"./../../media/tweetgifv7.gif\"\nimport Grid from '@material-ui/core/Grid';\nimport ToolTip from \"./../tooltip/tooltip\"\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n\n\nconst MyCloud = (props) => {\n\n    const theme = createMuiTheme();\n\n    theme.typography.h2 = {\n        fontSize: '2rem',\n        '@media (min-width:600px)': {\n            fontSize: '2.5rem',\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '3rem',\n        },\n    };\n\n    const [clicked, setClick] = React.useState(false)\n\n    const activateToolTip = () => {\n        setClick(!clicked)\n    }\n\n    const determineFrequency = (frequency) => {\n        return (frequency > 10 ? 10 : frequency)\n    }\n\n\n    const setFontSize = (frequency) => {\n\n        const width = window.innerWidth\n\n        const small = 500 //px\n        const medium = 700\n        const large = 1000\n        let currentSize = 0;\n\n        //if frequency over 10 then it will stil get sized with a frequency of 10\n\n        const freq = determineFrequency(frequency)\n        //console.log(\"freq \" + freq)\n        if (width > large) { //if large \n            currentSize = large;\n\n            const fontSize = currentSize / 130 * freq\n            //console.log(`${fontSize} , ${freq}`)\n            return `${fontSize}px`\n\n        }\n        if (width > medium && width < large) { //if medium  (btw 700 and 1000)\n            currentSize = medium;\n            const fontSize = currentSize / 300 * freq\n            //console.log(`rendered ${fontSize} , ${freq}`)\n            return `${fontSize}px`\n        }\n\n        if (width < medium) { //if small \n            currentSize = small;\n            const fontSize = currentSize / 600 * (freq / 2)\n            //console.log(`rendered ${fontSize} , ${freq}`)\n            return `${fontSize}px`\n        }\n\n    }\n\n    // setFontSize(droplet.frequency)\n\n    function debounce(fn, ms) {\n        let timer\n        return _ => {\n            clearTimeout(timer)\n            timer = setTimeout(_ => {\n                timer = null\n                fn.apply(this, arguments)\n            }, ms)\n        };\n    }\n\n\n\n\n    //RERENDERING FOR WINDOW CHANGE\n\n    const [dimensions, setDimensions] = React.useState({\n        height: window.innerHeight,\n        width: window.innerWidth\n    })\n    React.useEffect(() => {\n        const debouncedHandleResize = debounce(function handleResize() {\n            setDimensions({\n                height: window.innerHeight,\n                width: window.innerWidth\n            })\n        }, 1000)\n\n        window.addEventListener('resize', debouncedHandleResize)\n        return _ => {\n            window.removeEventListener('resize', debouncedHandleResize)\n\n        }\n    })\n\n\n\n    let counter = 0\n\n\n    const checkForShove = () => {\n        console.log(counter)\n        // console.log(\"hook \" + dimensions.width)\n        // console.log(\"vanilla \" + window.innerWidth)\n        //let styles = {};\n        if (counter > 260) { // A ton of repeated words like when trying Bill Gates \n            console.log(\"BIG SHOVED!\") //change to rectangle \n\n            //styles = Object.assign(styles, bigShoveStyles)\n            return \"cloudBigShove\"\n        }\n        console.log(window.screen.width)\n        if (counter > 235 && window.screen.width < 650) { //if critical mass of words and if screen size small enough\n            console.log(\"----SHOVED!----\") //change to rectangle \n            return \"cloudRegularShove\"\n            const regularShove = {\n                marginTop: \"100vh\", height: \"800px\", borderRadius: \"5px\",\n                paddingBottom: \"20px\"\n            }\n            //styles = Object.assign(styles, regularShove)\n\n        }\n        //console.log(styles)\n        return \"cloud\";\n    }\n\n    //{checkForShove}\n\n    const droplets = props.text.map((droplet) => (\n\n        //setCounter(counter + droplet.frequency),\n        counter += droplet.frequency,\n\n        < div key={props.text.indexOf(droplet)} >\n            <ToolTip word={droplet.word} frequency={droplet.frequency}\n\n            >\n                <div key={props.text.indexOf(droplet)} className=\"droplet\"\n                    style={{\n                        fontSize: setFontSize(droplet.frequency), fontWeight: \"700\", paddingLeft: \"2px\",\n                        paddingRight: \"2px\",\n                    }}\n                    onClick={activateToolTip}\n\n                >  {droplet.word}\n                </div>\n\n            </ToolTip>\n\n\n\n        </div >\n\n\n    ))\n\n    // console.log(props.text)\n\n\n\n    return (\n        <Grid container direction=\"column\" spacing={1} justify=\"center\">\n            <div className=\"cloudWrapper\" >\n\n                <div className=\"cloudTitle\">\n                    <ThemeProvider theme={theme}>\n                        <Typography variant=\"h2\"> Word Cloud of what {props.authorName} sees </Typography>\n                    </ThemeProvider>\n                </div>\n\n\n                <div className=\"outerContainer\">\n\n                    <img src={gif} alt=\"tweetGif\" style={{ borderRadius: \"16px\", float: \"left\" }} />\n\n\n\n                    <div className=\"cloud\" className={checkForShove()} >\n\n                        {droplets}\n\n                    </div>\n                </div>\n\n\n\n            </div >\n        </Grid >\n    );\n\n}\n// {droplets}\n\nexport default MyCloud;\n\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./initcloudbtn.css\"\n\n\nconst CloudBtn = (props) => {\n\n    const [cloudStatus, setCloudStatus] = React.useState(false)\n\n    const useStyles = makeStyles(theme => ({ //button styling\n        root: {\n            color: \"#28244E\",\n            borderColor: \"#C9B7E2\",\n            fontSize: \"1.5em\",\n            borderWidth: \"5px\",\n            padding: \"10px 20px 10px 20px\",\n            borderRadius: \"16px\",\n            width: \"100%\",\n\n            '&:hover': {\n                color: \"#3AC0CB\",\n                borderColor: \"white\",\n                fontSize: \"1.5em\",\n                borderWidth: \"5px\",\n                borderRadius: \"16px\",\n\n            },\n\n        }\n    }));\n\n    const classes = useStyles();\n\n\n\n    const handleClick = () => {\n        setCloudStatus(!cloudStatus)\n        props.returnClickToParent(!cloudStatus);\n        // change class to make screen go black\n    }\n\n    return (\n        <div className=\"cloudBtnWrapper\">\n            <Button variant=\"outlined\" color=\"primary\" size=\"large\" className={classes.root}\n                onClick={handleClick}>\n                View Word Cloud\n            </Button>\n        </div>\n    )\n}\n\nexport default CloudBtn","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./backbtn.css\"\n\nconst BackBtn = (props) => {\n\n    const useStyles = makeStyles(theme => ({ //button styling\n        root: {\n            color: \"#28244E\",\n            borderColor: \"#28244E\",\n            fontSize: \"1.5em\",\n            borderWidth: \"5px\",\n            borderRadius: \"16px\",\n            marginTop: \"5px\",\n\n            '&:hover': {\n                color: \"#3ACBA3 \",\n                borderColor: \"white\",\n                fontSize: \"1.5em\",\n                borderWidth: \"5px\",\n            },\n\n        }\n    }));\n\n    const classes = useStyles();\n\n    const handleClick = () => {\n        props.handler()\n    }\n\n    return (\n        <div style={{ position: \"absolute\" }}>\n            <Button variant=\"outlined\" color=\"primary\" size=\"large\" className={classes.root}\n                onClick={handleClick} style={{ marginTop: \"10px\", marginLeft: \"10px\" }}\n            >\n                <span className=\"buttonSpan\">&#8617;</span>\n\n            </Button>\n\n        </div>\n\n    )\n}\n\nexport default BackBtn;","import React from \"react\";\nimport \"./searchfailed.css\"\n\nconst SearchFailed = (props) => {\n    console.log(\"not found component active\")\n    return (\n        <div className=\"notFoundWrapper\">\n            {props.issue === \"0\" ?\n                <p> {props.authorName} follows 0 accounts. Please try a different one. </p>\n                : <p> Account not found. Please try a different handle. </p>}\n        </div>\n    )\n}\n\nexport default SearchFailed;","import React from \"react\";\nimport \"./currentlyviewing.css\"\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n//import Grid from '@material-ui/core/Grid';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\n\nconst CurrentlyViewing = (props) => {\n    const useStyles = makeStyles(theme => ({ //button styling\n        root: {\n            color: \"#28244E\",\n            borderColor: \"#64636B\",\n            borderWidth: \"5px\",\n            borderRadius: \"16px\",\n            background: \"-webkit-linear-gradient(45deg, #2F3639, #D2DEE3, #89EBCF 80%)\",\n            opacity: \".8\",\n\n\n\n\n            '&:hover': {\n                color: \"#3ACBA3 \",\n                borderColor: \"white\",\n                borderWidth: \"5px\",\n            },\n\n\n        }\n    }));\n    const classes = useStyles();\n\n    const handleClick = () => {\n        props.changeStatus(!props.status)\n    }\n\n    return (\n        <div className=\"current_view_wrapper\">\n\n            <p>  See {props.authorName}'s feed below</p>\n\n            <Button variant=\"outlined\" size=\"large\" className={classes.root}\n                onClick={handleClick} style={{ marginBottom: \"5px\" }}\n            >\n                <RotateLeftIcon style={{ color: 'black' }} />\n\n\n\n\n            </Button>\n\n\n        </div >\n    )\n}\n\nexport default CurrentlyViewing;\n\n{/* <span style={{ fontSize: \"30px\", color: \"#64636B\" }}>\n\n&#10155;\n\n\n\n</span> */}","import React from \"react\";\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\n\nconst HomeBtn = (props) => {\n    return (\n        <div>\n            <button style={{\n                padding: \"8px\", borderRadius: \"16px 0px 0px 16px\", float: \"right\", left: \"101%\",\n                backgroundColor: \"#32BDB7\"\n            }}>\n                <a href=\"https://www.nissimram.com\">\n                    <HomeOutlinedIcon style={{}} />\n                </a>\n\n\n            </button >\n        </div >\n    )\n}\n\nexport default HomeBtn;","import './App.css';\nimport React from 'react'\nimport Grid from '@material-ui/core/Grid';\n\nimport Instructions from \"./components/instructions/instructions\"\nimport Input from \"./components/input/input\"\nimport TwitterResults from \"./components/twitterResults/twitterResults\"\nimport MyCloud from \"./components/wordcloud/wordcloud\"\nimport CloudBtn from \"./components/wordcloud/initcloudbtn\"\nimport BackBtn from \"./components/backbtn/backbtn\"\nimport SearchFailed from \"./components/notfound/searchfailed\"\nimport CurrentlyViewing from './components/currentlyviewing/currentlyviewing';\nimport HomeBtn from './components/homebtn/homebtn';\n\n\nfunction App() {\n  const [loading, setLoading] = React.useState(false); // handle name\n\n  const [authorName, setAuthorName] = React.useState(null);\n\n  const [data, setData] = React.useState([\"No Tweets\"]);\n\n  const [cloudText, setCloudText] = React.useState([]);\n\n  const [appCSS, setAppCSS] = React.useState(\"App\")\n\n  const [successfulQuery, setsuccessfulQuery] = React.useState(true);\n\n  const [currentlyReading, setCurrentlyReading] = React.useState(false);\n\n\n  const manageCloudInit = (status) => {\n    //console.log(status)\n    status ? setAppCSS(\"CloudApp\") : setAppCSS(\"App\")\n    //return (status ? \"show cloud\" : \"don't show\")\n  }\n\n  const handleBackBtn = () => {\n    setAppCSS(\"App\")\n  }\n\n  const handleInput = (submittedName) => {\n    setLoading(true);\n    setsuccessfulQuery(true);\n    //.log(submittedName);\n\n\n    //console.log(\"Making request\")\n\n    fetch(`/api/users/${submittedName}`) //user=${submittedName}`\n      .then((res) => res.json())\n      .then(res => {\n        //console.log(\"yo\")\n        if (Array.isArray(res)) { // successful query with followers\n\n          const [tweets, wordCloudtext, authorName] = [res[0], res[1], res[2]];\n          console.log(authorName)\n\n          setData(tweets)\n          setCloudText(wordCloudtext)\n          setsuccessfulQuery(true);\n          setCurrentlyReading(true);\n          setAuthorName(authorName)\n          //console.log(wordCloudtext.length);\n          setLoading(false);\n\n        } else {\n          setsuccessfulQuery(false);\n          if (res.hasOwnProperty(\"notFound\")) {\n            //console.log(\"not an array\") // account not found \n            //console.log(res)\n            setData(res.notFound)\n            setCloudText([]); // reset cloud \n            setsuccessfulQuery(false);\n            setLoading(false);\n            //setPresentIssueMsg(true)\n          } else { //account exists but follows no one \n            //console.log(\"follows no one\")\n            setData(\"0\")\n            setCloudText([]); // reset cloud \n            setsuccessfulQuery(false);\n            setAuthorName(res.authorName)\n            setLoading(false);\n            //setPresentIssueMsg(true)\n          }\n\n        }\n\n      })\n\n  }\n\n  const returnFromCurrentlyViewing = (newStatus) => {\n    //console.log(\"changed view\")\n    setCurrentlyReading(newStatus)\n  }\n\n\n  return (\n    <div className=\"App\">\n      {appCSS === \"App\" ? <Grid container spacing={4} direction=\"column\" style={{\n        margin: 0,\n        width: '100%',\n      }}>\n\n        <HomeBtn />\n        <Grid item lg={12}>\n          <Instructions />\n        </Grid>\n\n        <Grid item lg={12} style={{ margin: \"0\" }}>\n          {currentlyReading ? <CurrentlyViewing authorName={authorName} changeStatus={returnFromCurrentlyViewing}\n            status={currentlyReading}\n          />\n            :\n            < Input handleInput={handleInput} loadingStatus={loading} />}\n\n        </Grid>\n\n\n        <Grid item style={{ padding: \"0px\" }} >\n          {cloudText.length > 0 && currentlyReading ? <CloudBtn returnClickToParent={manageCloudInit} /> : null}\n        </Grid>\n\n\n        <Grid item >\n          {!successfulQuery ? <SearchFailed authorName={authorName}\n            issue={data} goBack={returnFromCurrentlyViewing}\n          /> : null}\n          {currentlyReading ? <section>\n            <TwitterResults results={data} />\n          </section> : null}\n        </Grid>\n\n      </Grid> :\n        <div className=\"CloudApp\">\n          <div>\n            <BackBtn handler={handleBackBtn} />\n          </div>\n          <div>\n            <MyCloud text={cloudText} authorName={authorName} />\n          </div>\n        </div>\n\n      }\n\n    </div >\n  );\n}\n\nexport default App;\n\n// {cloudWanted ? <MyCloud text={cloudText} /> : null}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}