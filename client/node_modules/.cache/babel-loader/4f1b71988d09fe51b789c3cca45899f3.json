{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/tooltip/tooltip.js\";\nimport React from \"react\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToolTip = props => {\n  const HtmlTooltip = withStyles(theme => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9'\n    }\n  }))(Tooltip);\n  return /*#__PURE__*/_jsxDEV(HtmlTooltip, {\n    title: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        children: [\"            title=\", `\"${props.word}\" is used ${props.frequency} times`, \"> L\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"And here's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: 'some'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 45\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"u\", {\n        children: 'amazing content'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 61\n      }, this), \".\", ' ', \"It's very engaging. Right?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"HTML\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ToolTip;\nexport default ToolTip; //const tTip = <ToolTip frequency={droplet.frequency} word={droplet.word} />\n//     <ToolTip placement=\"right\" trigger={['click']} overlay={<span>tooltip</span>}>\n//     {droplet.word} is used {droplet.frequency}times\n// </ToolTip>\n// import \"./styles.css\";\n// import React from \"react\";\n// export default function App() {\n//   const numberOfHeadings = \n//   [{num : 1, value: \"tip1\"}, {num : 2, value: \"tip2\"}, {num : 4, value : \"tip3\" }, \n//   {num: 5, value : \"tip4\"}, {num : 6, value: \"tip6\"}];\n//   const handleClick = () => {\n//     console.log(\"show tip\");\n//     setDisplay(!display);\n//   };\n//   const [display, setDisplay] = React.useState(false);\n//   const headings = numberOfHeadings.map((num) => (\n//     <div\n//       className=\"clickable\"\n//       key={numberOfHeadings.indexOf(num) + Math.random() * 10}\n//     >\n//       <h2 onClick={handleClick}>Start editing to see some magic happen!</h2>\n//       <div>\n//         {display ? (\n//           <span\n//             style={{\n//               backgroundColor: \"gray\",\n//               padding: \"10px\"\n//             }}\n//           >\n//             {num.value}\n//           </span>\n//         ) : null}\n//       </div>\n//     </div>\n//   ));\n//   return (\n//     <div className=\"App\">\n//       <h1>Hello CodeSandbox</h1>\n//       {headings}\n//     </div>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"ToolTip\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/tooltip/tooltip.js"],"names":["React","Tooltip","withStyles","makeStyles","Typography","Button","ToolTip","props","HtmlTooltip","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","word","frequency"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAMC,WAAW,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,eAAe,EAAE,SADZ;AAELC,MAAAA,KAAK,EAAE,qBAFF;AAGLC,MAAAA,QAAQ,EAAE,GAHL;AAILC,MAAAA,QAAQ,EAAEL,KAAK,CAACM,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CAJL;AAKLC,MAAAA,MAAM,EAAE;AALH;AAD8B,GAAZ,CAAD,CAAV,CAQhBhB,OARgB,CAApB;AAUA,sBAEI,QAAC,WAAD;AACI,IAAA,KAAK,eACD,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAAA,yCAAgD,IAAGM,KAAK,CAACW,IAAK,aAAYX,KAAK,CAACY,SAAU,QAA1F;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,kBAAK;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ,oBAG4B;AAAA,kBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,cAH5B,oBAG4C;AAAA,kBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,cAH5C,OAGwE,GAHxE,EAIK,4BAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA,2BAUI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmBH,CA/BD;;KAAMb,O;AAiCN,eAAeA,OAAf,C,CAEC;AAEG;AACA;AACA;AAMJ;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nconst ToolTip = (props) => {\n\n    const HtmlTooltip = withStyles((theme) => ({\n        tooltip: {\n            backgroundColor: '#f5f5f9',\n            color: 'rgba(0, 0, 0, 0.87)',\n            maxWidth: 220,\n            fontSize: theme.typography.pxToRem(12),\n            border: '1px solid #dadde9',\n        },\n    }))(Tooltip);\n\n    return (\n\n        <HtmlTooltip\n            title={\n                <React.Fragment>\n                    <Typography color=\"inherit\">            title={`\"${props.word}\" is used ${props.frequency} times`}>\nL</Typography>\n                    <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\n                    {\"It's very engaging. Right?\"}\n                </React.Fragment>\n            }\n        >\n            <Button>HTML</Button>\n        </HtmlTooltip>\n\n\n\n\n    )\n}\n\nexport default ToolTip;\n\n //const tTip = <ToolTip frequency={droplet.frequency} word={droplet.word} />\n\n    //     <ToolTip placement=\"right\" trigger={['click']} overlay={<span>tooltip</span>}>\n    //     {droplet.word} is used {droplet.frequency}times\n    // </ToolTip>\n\n\n\n\n\n// import \"./styles.css\";\n// import React from \"react\";\n\n// export default function App() {\n//   const numberOfHeadings = \n//   [{num : 1, value: \"tip1\"}, {num : 2, value: \"tip2\"}, {num : 4, value : \"tip3\" }, \n//   {num: 5, value : \"tip4\"}, {num : 6, value: \"tip6\"}];\n\n//   const handleClick = () => {\n//     console.log(\"show tip\");\n//     setDisplay(!display);\n//   };\n//   const [display, setDisplay] = React.useState(false);\n\n//   const headings = numberOfHeadings.map((num) => (\n//     <div\n//       className=\"clickable\"\n//       key={numberOfHeadings.indexOf(num) + Math.random() * 10}\n//     >\n//       <h2 onClick={handleClick}>Start editing to see some magic happen!</h2>\n//       <div>\n//         {display ? (\n//           <span\n//             style={{\n//               backgroundColor: \"gray\",\n//               padding: \"10px\"\n//             }}\n//           >\n//             {num.value}\n//           </span>\n//         ) : null}\n//       </div>\n//     </div>\n//   ));\n//   return (\n//     <div className=\"App\">\n//       <h1>Hello CodeSandbox</h1>\n\n//       {headings}\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}