{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Instructions from \"./components/instructions/instructions\";\nimport Input from \"./components/input/input\";\nimport TwitterResults from \"./components/twitterResults/twitterResults\";\nimport MyCloud from \"./components/wordcloud/wordcloud\";\nimport CloudBtn from \"./components/wordcloud/initcloudbtn\";\nimport BackBtn from \"./components/backbtn/backbtn\";\nimport SearchFailed from \"./components/notfound/searchfailed\";\nimport CurrentlyViewing from './components/currentlyviewing/currentlyviewing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = React.useState(null);\n  const [data, setData] = React.useState([\"No Tweets\"]);\n  const [cloudText, setCloudText] = React.useState([]);\n  const [appCSS, setAppCSS] = React.useState(\"App\");\n  const [successfulQuery, setsuccessfulQuery] = React.useState(true);\n\n  const manageCloudInit = status => {\n    console.log(status);\n    status ? setAppCSS(\"CloudApp\") : setAppCSS(\"App\"); //return (status ? \"show cloud\" : \"don't show\")\n  };\n\n  const handleBackBtn = () => {\n    setAppCSS(\"App\");\n  };\n\n  const handleInput = submittedName => {\n    console.log(submittedName);\n    setName(submittedName);\n    console.log(\"Making request\");\n    fetch(`/api/users/${submittedName}`) //user=${submittedName}`\n    .then(res => res.json()).then(res => {\n      console.log(\"yo\");\n\n      if (Array.isArray(res)) {\n        // successful query with followers\n        const [tweets, wordCloudtext] = [res[0], res[1]];\n        setData(tweets);\n        setCloudText(wordCloudtext);\n        setsuccessfulQuery(true);\n        console.log(wordCloudtext);\n      } else {\n        setsuccessfulQuery(false);\n\n        if (res.hasOwnProperty(\"notFound\")) {\n          console.log(\"not an array\"); // account not found \n\n          console.log(res);\n          setData(res.notFound);\n          setCloudText([]); // reset cloud \n        } else {\n          //account exists but follows no one \n          console.log(\"follows no one\");\n          setData(\"0\");\n          setCloudText([]); // reset cloud \n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: appCSS === \"App\" ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      direction: \"column\",\n      style: {\n        margin: 0,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: data.length > 0 ? /*#__PURE__*/_jsxDEV(CurrentlyViewing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(Input, {\n          handleInput: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          padding: \"0px\"\n        },\n        children: cloudText.length > 0 ? /*#__PURE__*/_jsxDEV(CloudBtn, {\n          returnClickToParent: manageCloudInit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 35\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: !successfulQuery ? /*#__PURE__*/_jsxDEV(SearchFailed, {\n          issue: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(TwitterResults, {\n            results: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CloudApp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BackBtn, {\n          handler: handleBackBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MyCloud, {\n          text: cloudText,\n          accountName: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zdZwku5VEeKzGQT1SuAAYarwNyU=\");\n\n_c = App;\nexport default App; // {cloudWanted ? <MyCloud text={cloudText} /> : null}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/App.js"],"names":["React","Grid","Instructions","Input","TwitterResults","MyCloud","CloudBtn","BackBtn","SearchFailed","CurrentlyViewing","App","name","setName","useState","data","setData","cloudText","setCloudText","appCSS","setAppCSS","successfulQuery","setsuccessfulQuery","manageCloudInit","status","console","log","handleBackBtn","handleInput","submittedName","fetch","then","res","json","Array","isArray","tweets","wordCloudtext","hasOwnProperty","notFound","margin","width","length","padding"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react'\nimport Grid from '@material-ui/core/Grid';\n\nimport Instructions from \"./components/instructions/instructions\"\nimport Input from \"./components/input/input\"\nimport TwitterResults from \"./components/twitterResults/twitterResults\"\nimport MyCloud from \"./components/wordcloud/wordcloud\"\nimport CloudBtn from \"./components/wordcloud/initcloudbtn\"\nimport BackBtn from \"./components/backbtn/backbtn\"\nimport SearchFailed from \"./components/notfound/searchfailed\"\nimport CurrentlyViewing from './components/currentlyviewing/currentlyviewing';\n\n\nfunction App() {\n  const [name, setName] = React.useState(null);\n\n  const [data, setData] = React.useState([\"No Tweets\"]);\n\n  const [cloudText, setCloudText] = React.useState([]);\n\n  const [appCSS, setAppCSS] = React.useState(\"App\")\n\n  const [successfulQuery, setsuccessfulQuery] = React.useState(true)\n\n  const manageCloudInit = (status) => {\n    console.log(status)\n    status ? setAppCSS(\"CloudApp\") : setAppCSS(\"App\")\n    //return (status ? \"show cloud\" : \"don't show\")\n  }\n\n  const handleBackBtn = () => {\n    setAppCSS(\"App\")\n  }\n\n  const handleInput = (submittedName) => {\n    console.log(submittedName);\n    setName(submittedName);\n\n    console.log(\"Making request\")\n\n    fetch(`/api/users/${submittedName}`) //user=${submittedName}`\n      .then((res) => res.json())\n      .then(res => {\n        console.log(\"yo\")\n        if (Array.isArray(res)) { // successful query with followers\n\n          const [tweets, wordCloudtext] = [res[0], res[1]];\n\n          setData(tweets)\n          setCloudText(wordCloudtext)\n          setsuccessfulQuery(true);\n          console.log(wordCloudtext);\n        } else {\n          setsuccessfulQuery(false);\n          if (res.hasOwnProperty(\"notFound\")) {\n            console.log(\"not an array\") // account not found \n            console.log(res)\n            setData(res.notFound)\n            setCloudText([]); // reset cloud \n          } else { //account exists but follows no one \n            console.log(\"follows no one\")\n            setData(\"0\")\n            setCloudText([]); // reset cloud \n          }\n\n        }\n\n      })\n\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      {appCSS === \"App\" ? <Grid container spacing={5} direction=\"column\" style={{\n        margin: 0,\n        width: '100%',\n      }}>\n\n\n        <Grid item lg={12}>\n          <Instructions />\n        </Grid>\n\n        <Grid item>\n          {data.length > 0 ? <CurrentlyViewing /> : <Input handleInput={handleInput} />}\n        </Grid>\n\n        <Grid item style={{ padding: \"0px\" }} >\n          {cloudText.length > 0 ? <CloudBtn returnClickToParent={manageCloudInit} /> : null}\n        </Grid>\n\n\n        <Grid item >\n          {!successfulQuery ? <SearchFailed issue={data} /> : <section>\n            <TwitterResults results={data} />\n          </section>}\n        </Grid>\n\n      </Grid> :\n        <div className=\"CloudApp\">\n          <div>\n            <BackBtn handler={handleBackBtn} />\n          </div>\n          <div>\n            <MyCloud text={cloudText} accountName={name} />\n          </div>\n        </div>\n\n      }\n\n    </div >\n  );\n}\n\nexport default App;\n\n// {cloudWanted ? <MyCloud text={cloudText} /> : null}"]},"metadata":{},"sourceType":"module"}