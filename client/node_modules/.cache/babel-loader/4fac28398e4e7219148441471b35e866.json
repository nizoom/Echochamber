{"ast":null,"code":"import _slicedToArray from\"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from\"react\";import Typography from'@material-ui/core/Typography';import\"./wordcloud.css\";import gif from\"./../../media/tweetgifv7.gif\";import Grid from'@material-ui/core/Grid';import ToolTip from\"./../tooltip/tooltip\";import{createMuiTheme,ThemeProvider}from'@material-ui/core/styles';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var MyCloud=function MyCloud(props){var _jsx2;var theme=createMuiTheme();theme.typography.h2=_defineProperty({fontSize:'2rem','@media (min-width:600px)':{fontSize:'2.5rem'}},theme.breakpoints.up('md'),{fontSize:'3rem'});var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),clicked=_React$useState2[0],setClick=_React$useState2[1];var activateToolTip=function activateToolTip(){setClick(!clicked);};var determineFrequency=function determineFrequency(frequency){return frequency>10?10:frequency;};var setFontSize=function setFontSize(frequency){var width=window.innerWidth;var small=500;//px\nvar medium=700;var large=1000;var currentSize=0;//if frequency over 10 then it will stil get sized with a frequency of 10\nvar freq=determineFrequency(frequency);//console.log(\"freq \" + freq)\nif(width>large){//if large \ncurrentSize=large;var fontSize=currentSize/130*freq;//console.log(`${fontSize} , ${freq}`)\nreturn\"\".concat(fontSize,\"px\");}if(width>medium&&width<large){//if medium  (btw 700 and 1000)\ncurrentSize=medium;var _fontSize=currentSize/300*freq;//console.log(`rendered ${fontSize} , ${freq}`)\nreturn\"\".concat(_fontSize,\"px\");}if(width<medium){//if small \ncurrentSize=small;var _fontSize2=currentSize/600*(freq/2);//console.log(`rendered ${fontSize} , ${freq}`)\nreturn\"\".concat(_fontSize2,\"px\");}};// setFontSize(droplet.frequency)\nfunction debounce(fn,ms){var _arguments=arguments,_this=this;var timer;return function(_){clearTimeout(timer);timer=setTimeout(function(_){timer=null;fn.apply(_this,_arguments);},ms);};}//RERENDERING FOR WINDOW CHANGE\nvar _React$useState3=React.useState({height:window.innerHeight,width:window.innerWidth}),_React$useState4=_slicedToArray(_React$useState3,2),dimensions=_React$useState4[0],setDimensions=_React$useState4[1];React.useEffect(function(){var debouncedHandleResize=debounce(function handleResize(){setDimensions({height:window.innerHeight,width:window.innerWidth});},1000);window.addEventListener('resize',debouncedHandleResize);return function(_){window.removeEventListener('resize',debouncedHandleResize);};});var counter=0;var checkForShove=function checkForShove(){console.log(counter);// console.log(\"hook \" + dimensions.width)\n// console.log(\"vanilla \" + window.innerWidth)\n//let styles = {};\nif(counter>260){// A ton of repeated words like when trying Bill Gates \nconsole.log(\"BIG SHOVED!\");//change to rectangle \n//styles = Object.assign(styles, bigShoveStyles)\nreturn\"cloudBigShove\";}console.log(window.screen.width);if(counter>235&&window.screen.width<650){//if critical mass of words and if screen size small enough\nconsole.log(\"----SHOVED!----\");//change to rectangle \nreturn\"cloudRegularShove\";var regularShove={marginTop:\"100vh\",height:\"800px\",borderRadius:\"5px\",paddingBottom:\"20px\"};//styles = Object.assign(styles, regularShove)\n}//console.log(styles)\nreturn\"cloud\";};//{checkForShove}\nvar droplets=props.text.map(function(droplet){return(//setCounter(counter + droplet.frequency),\ncounter+=droplet.frequency,/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ToolTip,{word:droplet.word,frequency:droplet.frequency,children:/*#__PURE__*/_jsxs(\"div\",{className:\"droplet\",style:{fontSize:setFontSize(droplet.frequency),fontWeight:\"700\",paddingLeft:\"2px\",paddingRight:\"2px\"},onClick:activateToolTip,children:[\"  \",droplet.word]},props.text.indexOf(droplet))})},props.text.indexOf(droplet)));});// console.log(props.text)\nreturn/*#__PURE__*/_jsx(Grid,{container:true,direction:\"column\",spacing:1,justify:\"center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"cloudWrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cloudTitle\",children:/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsxs(Typography,{variant:\"h2\",children:[\" Word Cloud of what \",props.authorName,\" sees \"]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"outerContainer\",children:[/*#__PURE__*/_jsx(\"img\",{src:gif,alt:\"tweetGif\",style:{borderRadius:\"16px\",float:\"left\"}}),/*#__PURE__*/_jsx(\"div\",(_jsx2={className:\"cloud\"},_defineProperty(_jsx2,\"className\",checkForShove()),_defineProperty(_jsx2,\"children\",droplets),_jsx2))]})]})});};// {droplets}\nexport default MyCloud;","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/wordcloud/wordcloud.js"],"names":["React","Typography","gif","Grid","ToolTip","createMuiTheme","ThemeProvider","MyCloud","props","theme","typography","h2","fontSize","breakpoints","up","useState","clicked","setClick","activateToolTip","determineFrequency","frequency","setFontSize","width","window","innerWidth","small","medium","large","currentSize","freq","debounce","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","height","innerHeight","dimensions","setDimensions","useEffect","debouncedHandleResize","handleResize","addEventListener","removeEventListener","counter","checkForShove","console","log","screen","regularShove","marginTop","borderRadius","paddingBottom","droplets","text","map","droplet","word","fontWeight","paddingLeft","paddingRight","indexOf","authorName","float"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport \"./wordcloud.css\"\nimport gif from \"./../../media/tweetgifv7.gif\"\nimport Grid from '@material-ui/core/Grid';\nimport ToolTip from \"./../tooltip/tooltip\"\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n\n\nconst MyCloud = (props) => {\n\n    const theme = createMuiTheme();\n\n    theme.typography.h2 = {\n        fontSize: '2rem',\n        '@media (min-width:600px)': {\n            fontSize: '2.5rem',\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '3rem',\n        },\n    };\n\n    const [clicked, setClick] = React.useState(false)\n\n    const activateToolTip = () => {\n        setClick(!clicked)\n    }\n\n    const determineFrequency = (frequency) => {\n        return (frequency > 10 ? 10 : frequency)\n    }\n\n\n    const setFontSize = (frequency) => {\n\n        const width = window.innerWidth\n\n        const small = 500 //px\n        const medium = 700\n        const large = 1000\n        let currentSize = 0;\n\n        //if frequency over 10 then it will stil get sized with a frequency of 10\n\n        const freq = determineFrequency(frequency)\n        //console.log(\"freq \" + freq)\n        if (width > large) { //if large \n            currentSize = large;\n\n            const fontSize = currentSize / 130 * freq\n            //console.log(`${fontSize} , ${freq}`)\n            return `${fontSize}px`\n\n        }\n        if (width > medium && width < large) { //if medium  (btw 700 and 1000)\n            currentSize = medium;\n            const fontSize = currentSize / 300 * freq\n            //console.log(`rendered ${fontSize} , ${freq}`)\n            return `${fontSize}px`\n        }\n\n        if (width < medium) { //if small \n            currentSize = small;\n            const fontSize = currentSize / 600 * (freq / 2)\n            //console.log(`rendered ${fontSize} , ${freq}`)\n            return `${fontSize}px`\n        }\n\n    }\n\n    // setFontSize(droplet.frequency)\n\n    function debounce(fn, ms) {\n        let timer\n        return _ => {\n            clearTimeout(timer)\n            timer = setTimeout(_ => {\n                timer = null\n                fn.apply(this, arguments)\n            }, ms)\n        };\n    }\n\n\n\n\n    //RERENDERING FOR WINDOW CHANGE\n\n    const [dimensions, setDimensions] = React.useState({\n        height: window.innerHeight,\n        width: window.innerWidth\n    })\n    React.useEffect(() => {\n        const debouncedHandleResize = debounce(function handleResize() {\n            setDimensions({\n                height: window.innerHeight,\n                width: window.innerWidth\n            })\n        }, 1000)\n\n        window.addEventListener('resize', debouncedHandleResize)\n        return _ => {\n            window.removeEventListener('resize', debouncedHandleResize)\n\n        }\n    })\n\n\n\n    let counter = 0\n\n\n    const checkForShove = () => {\n        console.log(counter)\n        // console.log(\"hook \" + dimensions.width)\n        // console.log(\"vanilla \" + window.innerWidth)\n        //let styles = {};\n        if (counter > 260) { // A ton of repeated words like when trying Bill Gates \n            console.log(\"BIG SHOVED!\") //change to rectangle \n\n            //styles = Object.assign(styles, bigShoveStyles)\n            return \"cloudBigShove\"\n        }\n        console.log(window.screen.width)\n        if (counter > 235 && window.screen.width < 650) { //if critical mass of words and if screen size small enough\n            console.log(\"----SHOVED!----\") //change to rectangle \n            return \"cloudRegularShove\"\n            const regularShove = {\n                marginTop: \"100vh\", height: \"800px\", borderRadius: \"5px\",\n                paddingBottom: \"20px\"\n            }\n            //styles = Object.assign(styles, regularShove)\n\n        }\n        //console.log(styles)\n        return \"cloud\";\n    }\n\n    //{checkForShove}\n\n    const droplets = props.text.map((droplet) => (\n\n        //setCounter(counter + droplet.frequency),\n        counter += droplet.frequency,\n\n        < div key={props.text.indexOf(droplet)} >\n            <ToolTip word={droplet.word} frequency={droplet.frequency}\n\n            >\n                <div key={props.text.indexOf(droplet)} className=\"droplet\"\n                    style={{\n                        fontSize: setFontSize(droplet.frequency), fontWeight: \"700\", paddingLeft: \"2px\",\n                        paddingRight: \"2px\",\n                    }}\n                    onClick={activateToolTip}\n\n                >  {droplet.word}\n                </div>\n\n            </ToolTip>\n\n\n\n        </div >\n\n\n    ))\n\n    // console.log(props.text)\n\n\n\n    return (\n        <Grid container direction=\"column\" spacing={1} justify=\"center\">\n            <div className=\"cloudWrapper\" >\n\n                <div className=\"cloudTitle\">\n                    <ThemeProvider theme={theme}>\n                        <Typography variant=\"h2\"> Word Cloud of what {props.authorName} sees </Typography>\n                    </ThemeProvider>\n                </div>\n\n\n                <div className=\"outerContainer\">\n\n                    <img src={gif} alt=\"tweetGif\" style={{ borderRadius: \"16px\", float: \"left\" }} />\n\n\n\n                    <div className=\"cloud\" className={checkForShove()} >\n\n                        {droplets}\n\n                    </div>\n                </div>\n\n\n\n            </div >\n        </Grid >\n    );\n\n}\n// {droplets}\n\nexport default MyCloud;\n\n"]},"metadata":{},"sourceType":"module"}