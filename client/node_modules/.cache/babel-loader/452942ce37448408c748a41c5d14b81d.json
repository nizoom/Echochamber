{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/twitterResults/twitterResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport \"./twitterResults.css\";\nimport CollapseButton from \"../minimize/minimize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TwitterResults = props => {\n  _s();\n\n  const tweets = props.results;\n  const [btnStatus, setBtnStatus] = useState(false); // defaults to plus where content is shown\n\n  const [height, setHeight] = useState(\"0px\");\n  const content = useRef(null);\n\n  const changeBtnStatus = () => {\n    setBtnStatus(!btnStatus);\n    console.log(content.current.scrollHeight);\n    setHeight(btnStatus ? `${content.current.scrollHeight}px` : `0px`);\n  }; //{btnStatus ? \"container\" : \"collapsed\"}\n\n\n  const displayTweets = tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"author\",\n        children: tweet.authorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tweetText\",\n        children: [tweet.text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          padding: \"10px\",\n          opacity: \".7\"\n        },\n        children: [tweet.timeSince, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, tweets.indexOf(tweet).toString(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this));\n  console.log(props.results);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.results[0] !== \"No Tweets\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CollapseButton, {\n        btnClicked: changeBtnStatus,\n        status: btnStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: content,\n        style: {\n          maxHeight: `${height}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\"\n          },\n          children: displayTweets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"2em\",\n        color: \"#89EBCF\"\n      },\n      children: \" ......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TwitterResults, \"S/lT/dzkmMcZQr9E5EYQQ3/r2GE=\");\n\n_c = TwitterResults;\nexport default TwitterResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterResults\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/twitterResults/twitterResults.js"],"names":["React","useState","useRef","CollapseButton","TwitterResults","props","tweets","results","btnStatus","setBtnStatus","height","setHeight","content","changeBtnStatus","console","log","current","scrollHeight","displayTweets","map","tweet","authorName","text","padding","opacity","timeSince","indexOf","toString","maxHeight","display","flexDirection","flexWrap","justifyContent","fontSize","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,sBAAP;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAG9B,QAAMC,MAAM,GAAGD,KAAK,CAACE,OAArB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C,CAL8B,CAKoB;;AAElD,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMW,OAAO,GAAGV,MAAM,CAAC,IAAD,CAAtB;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAC1BJ,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,OAAR,CAAgBC,YAA5B;AACAN,IAAAA,SAAS,CAACH,SAAS,GAAI,GAAEI,OAAO,CAACI,OAAR,CAAgBC,YAAa,IAAnC,GAA0C,KAApD,CAAT;AAEH,GALD,CAX8B,CAkB9B;;;AACA,QAAMC,aAAa,GAAGZ,MAAM,CAACa,GAAP,CAAYC,KAAD,iBAE7B;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BAGI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA,kBAAuBA,KAAK,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,mBAA0BD,KAAK,CAACE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,OAAO,EAAE;AAA5B,SAAV;AAAA,mBAA+CJ,KAAK,CAACK,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,KAA+BnB,MAAM,CAACoB,OAAP,CAAeN,KAAf,EAAsBO,QAAtB,EAA/B;AAAA;AAAA;AAAA;AAAA,UAFkB,CAAtB;AAcAb,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACE,OAAlB;AAEA,sBACI;AAAA,cAGQF,KAAK,CAACE,OAAN,CAAc,CAAd,MAAqB,WAArB,gBACI;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,UAAU,EAAEM,eAA5B;AAA6C,QAAA,MAAM,EAAEL;AAArD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEI,OAAhC;AACI,QAAA,KAAK,EAAE;AAAEgB,UAAAA,SAAS,EAAG,GAAElB,MAAO;AAAvB,SADX;AAAA,+BAGI;AAAI,UAAA,KAAK,EAAE;AACPmB,YAAAA,OAAO,EAAE,MADF;AACUC,YAAAA,aAAa,EAAE,KADzB;AACgCC,YAAAA,QAAQ,EAAE,MAD1C;AAEPC,YAAAA,cAAc,EAAE;AAFT,WAAX;AAAA,oBAIKd;AAJL;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,gBAiBI;AAAG,MAAA,KAAK,EAAE;AAAEe,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBZ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA9DD;;GAAM9B,c;;KAAAA,c;AAgEN,eAAeA,cAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./twitterResults.css\"\nimport CollapseButton from \"../minimize/minimize\"\n\n\nconst TwitterResults = (props) => {\n\n\n    const tweets = props.results;\n\n    const [btnStatus, setBtnStatus] = useState(false) // defaults to plus where content is shown\n\n    const [height, setHeight] = useState(\"0px\");\n\n    const content = useRef(null);\n\n    const changeBtnStatus = () => {\n        setBtnStatus(!btnStatus)\n        console.log(content.current.scrollHeight)\n        setHeight(btnStatus ? `${content.current.scrollHeight}px` : `0px`)\n\n    }\n\n    //{btnStatus ? \"container\" : \"collapsed\"}\n    const displayTweets = tweets.map((tweet) =>\n\n        <div className=\"tweetDiv\" key={tweets.indexOf(tweet).toString()}\n\n        >\n            <li>\n                <p className=\"author\">{tweet.authorName}</p>\n                <p className=\"tweetText\">{tweet.text} </p>\n                <p style={{ padding: \"10px\", opacity: \".7\" }}>{tweet.timeSince} </p>\n\n            </li>\n        </div>\n    )\n\n    console.log(props.results)\n\n    return (\n        <div>\n\n            {\n                props.results[0] !== \"No Tweets\" ?\n                    <div>\n                        <CollapseButton btnClicked={changeBtnStatus} status={btnStatus} />\n\n                        <div className=\"container\" ref={content}\n                            style={{ maxHeight: `${height}` }}\n                        >\n                            <ul style={{\n                                display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\",\n                                justifyContent: \"space-between\"\n                            }}>\n                                {displayTweets}\n                            </ul>\n                        </div >\n\n                    </div>\n                    :\n                    <p style={{ fontSize: \"2em\", color: \"#89EBCF\" }}> ......</p>\n            }\n        </div >\n\n\n    )\n}\n\nexport default TwitterResults;"]},"metadata":{},"sourceType":"module"}