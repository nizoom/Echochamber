{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Instructions from \"./components/instructions/instructions\";\nimport Input from \"./components/input/input\";\nimport TwitterResults from \"./components/twitterResults/twitterResults\"; //import validateHandle from \"./twitterAPI/validateHandle\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = React.useState(null);\n  const [data, setData] = React.useState([\"No Tweets\"]);\n\n  const handleInput = submittedName => {\n    console.log(submittedName);\n    setName(submittedName);\n    console.log(\"Making request\");\n    fetch(`/api/users/${submittedName}`) //user=${submittedName}`\n    .then(res => res.json()) //.then((info) => console.log(info))\n    .then(data => setData(data)); //.then((data) => console.log(data))\n  }; //validateHandle(submittedName)\n  //take name once submitted \n  //pass to twitter api function\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 10,\n      direction: \"column\",\n      justify: \"space-evenly\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            style: {\n              fontSize: \"3em\",\n              marginTop: \"15px\"\n            },\n            children: \"Welcome to The Echo Chamber \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          handleInput: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(TwitterResults, {\n            results: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0EBGRrIA8gai+d5wQuA4olyJbUE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/App.js"],"names":["React","Typography","Grid","Instructions","Input","TwitterResults","App","name","setName","useState","data","setData","handleInput","submittedName","console","log","fetch","then","res","json","fontSize","marginTop"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,cAAP,MAA2B,4CAA3B,C,CACA;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,IAAf,CAAxB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACS,QAAN,CAAe,CAAC,WAAD,CAAf,CAAxB;;AAEA,QAAMG,WAAW,GAAIC,aAAD,IAAmB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAL,IAAAA,OAAO,CAACK,aAAD,CAAP;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEAC,IAAAA,KAAK,CAAE,cAAaH,aAAc,EAA7B,CAAL,CAAqC;AAArC,KACGI,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEE;AAFF,KAGGF,IAHH,CAGSP,IAAD,IAAUC,OAAO,CAACD,IAAD,CAHzB,EANqC,CAUrC;AAED,GAZD,CALa,CAmBb;AACA;AACA;;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,EAAzB;AAA6B,MAAA,SAAS,EAAC,QAAvC;AAAgD,MAAA,OAAO,EAAC,cAAxD;AAAA,8BAGE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,KAAK,EAAE;AAAEU,cAAAA,QAAQ,EAAE,KAAZ;AAAmBC,cAAAA,SAAS,EAAE;AAA9B,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAcE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF,eAkBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE;AAAA,iCACE,QAAC,cAAD;AAAgB,YAAA,OAAO,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GArDQJ,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport Instructions from \"./components/instructions/instructions\"\nimport Input from \"./components/input/input\"\nimport TwitterResults from \"./components/twitterResults/twitterResults\"\n//import validateHandle from \"./twitterAPI/validateHandle\"\n\n\nfunction App() {\n  const [name, setName] = React.useState(null);\n\n  const [data, setData] = React.useState([\"No Tweets\"]);\n\n  const handleInput = (submittedName) => {\n    console.log(submittedName);\n    setName(submittedName);\n\n    console.log(\"Making request\")\n\n    fetch(`/api/users/${submittedName}`) //user=${submittedName}`\n      .then((res) => res.json())\n      //.then((info) => console.log(info))\n      .then((data) => setData(data))\n    //.then((data) => console.log(data))\n\n  }\n\n  //validateHandle(submittedName)\n  //take name once submitted \n  //pass to twitter api function\n\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={10} direction=\"column\" justify=\"space-evenly\"\n      >\n\n        <Grid item>\n          <header>\n            <Typography variant=\"h1\" style={{ fontSize: \"3em\", marginTop: \"15px\" }}>\n              Welcome to The Echo Chamber </Typography>\n          </header>\n        </Grid>\n\n        <Grid item>\n          <Instructions />\n        </Grid>\n\n        <Grid item>\n          <Input handleInput={handleInput} />\n        </Grid>\n\n        <Grid item>\n          <section>\n            <TwitterResults results={data} />\n          </section>\n        </Grid>\n\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}