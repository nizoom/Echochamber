{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/input/input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  _s();\n\n  const [inputContent, setInputContent] = useState(\"\");\n  const [validity, setValidity] = useState(true);\n\n  const handleChange = event => {\n    let usernameAttempt = event.target.value;\n    setInputContent(usernameAttempt);\n  };\n\n  const passSubmitted = () => {\n    props.handleInput(inputContent);\n  };\n\n  const checkValidity = () => {\n    const regex = /[^a-zA-Z\\d\\s_]/; // if inputContent is empty -> invalid \n\n    if (inputContent === \"\") {\n      setValidity(false);\n    } // if inputContent contains non alphanumeric chars except dashes  -> invalid \n\n\n    if (regex.test(inputContent)) {\n      setValidity(false);\n    } // if inputContent is less than 4 and no more than 15 chars long \n\n\n    if (inputContent.length < 4 || inputContent.length > 15) {\n      setValidity(false);\n    }\n\n    validity ? passSubmitted : null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"Twitter Handle\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginLeft: \"25px\",\n        marginTop: \"15px\"\n      },\n      onClick: checkValidity,\n      children: \" Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), validity ? null : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Handle must be 4 to 15 characters of only numbers, letters, and underscores \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"4FqTWxgA76L9TLfcBZeSd8tcqUE=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/input/input.js"],"names":["React","useState","TextField","Button","Input","props","inputContent","setInputContent","validity","setValidity","handleChange","event","usernameAttempt","target","value","passSubmitted","handleInput","checkValidity","regex","test","length","marginLeft","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIC,eAAe,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAnC;AACAP,IAAAA,eAAe,CAACK,eAAD,CAAf;AACH,GAHD;;AAKA,QAAMG,aAAa,GAAG,MAAM;AACxBV,IAAAA,KAAK,CAACW,WAAN,CAAkBV,YAAlB;AACH,GAFD;;AAIA,QAAMW,aAAa,GAAG,MAAM;AACxB,UAAMC,KAAK,GAAG,gBAAd,CADwB,CAExB;;AACA,QAAIZ,YAAY,KAAK,EAArB,EAAyB;AACrBG,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KALuB,CAMxB;;;AAEA,QAAIS,KAAK,CAACC,IAAN,CAAWb,YAAX,CAAJ,EAA8B;AAC1BG,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAVuB,CAYxB;;;AACA,QAAIH,YAAY,CAACc,MAAb,GAAsB,CAAtB,IAA2Bd,YAAY,CAACc,MAAb,GAAsB,EAArD,EAAyD;AACrDX,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAEDD,IAAAA,QAAQ,GAAGO,aAAH,GAAmB,IAA3B;AACH,GAlBD;;AAoBA,sBAEI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,gBAArC;AACI,MAAA,QAAQ,EAAEL;AADd;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AACI,MAAA,KAAK,EAAE;AAAEW,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,SAAS,EAAE;AAAjC,OADX;AAEI,MAAA,OAAO,EAAEL,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EASKT,QAAQ,GAAG,IAAH,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATvB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAcH,CAjDD;;GAAMJ,K;;KAAAA,K;AAmDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nconst Input = (props) => {\n\n    const [inputContent, setInputContent] = useState(\"\");\n\n    const [validity, setValidity] = useState(true);\n\n    const handleChange = (event) => {\n        let usernameAttempt = event.target.value;\n        setInputContent(usernameAttempt);\n    }\n\n    const passSubmitted = () => {\n        props.handleInput(inputContent);\n    }\n\n    const checkValidity = () => {\n        const regex = /[^a-zA-Z\\d\\s_]/\n        // if inputContent is empty -> invalid \n        if (inputContent === \"\") {\n            setValidity(false);\n        }\n        // if inputContent contains non alphanumeric chars except dashes  -> invalid \n\n        if (regex.test(inputContent)) {\n            setValidity(false);\n        }\n\n        // if inputContent is less than 4 and no more than 15 chars long \n        if (inputContent.length < 4 || inputContent.length > 15) {\n            setValidity(false);\n        }\n\n        validity ? passSubmitted : null;\n    }\n\n    return (\n\n        <div>\n            <TextField id=\"standard-basic\" label=\"Twitter Handle\"\n                onChange={handleChange} />\n\n            <Button variant=\"contained\" color=\"primary\"\n                style={{ marginLeft: \"25px\", marginTop: \"15px\" }}\n                onClick={checkValidity}\n            > Submit </Button>\n\n            {validity ? null : <p> Handle must be 4 to 15 characters of only numbers, letters, and underscores </p>}\n        </div>\n    )\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}