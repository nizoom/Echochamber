{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Enter-the-Echo-Chamber/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Instructions from \"./components/instructions/instructions\";\nimport Input from \"./components/input/input\";\nimport TwitterResults from \"./components/twitterResults/twitterResults\";\nimport MyCloud from \"./components/wordcloud/wordcloud\";\nimport CloudBtn from \"./components/wordcloud/initcloudbtn\";\nimport BackBtn from \"./components/backbtn/backbtn\";\nimport SearchFailed from \"./components/notfound/searchfailed\";\nimport CurrentlyViewing from './components/currentlyviewing/currentlyviewing';\nimport HomeBtn from './components/homebtn/homebtn';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = React.useState(false); // handle name\n\n  const [authorName, setAuthorName] = React.useState(null);\n  const [data, setData] = React.useState([\"No Tweets\"]);\n  const [cloudText, setCloudText] = React.useState([]);\n  const [appCSS, setAppCSS] = React.useState(\"App\");\n  const [successfulQuery, setsuccessfulQuery] = React.useState(true);\n  const [currentlyReading, setCurrentlyReading] = React.useState(false);\n\n  const manageCloudInit = status => {\n    //console.log(status)\n    status ? setAppCSS(\"CloudApp\") : setAppCSS(\"App\"); //return (status ? \"show cloud\" : \"don't show\")\n  };\n\n  const handleBackBtn = () => {\n    setAppCSS(\"App\");\n  };\n\n  const handleInput = submittedName => {\n    setLoading(true);\n    setsuccessfulQuery(true); //.log(submittedName);\n    //console.log(\"Making request\")\n\n    fetch(`/api/users/${submittedName}`) //user=${submittedName}`\n    .then(res => res.json()).then(res => {\n      //console.log(\"yo\")\n      if (Array.isArray(res)) {\n        // successful query with followers\n        const [tweets, wordCloudtext, authorName] = [res[0], res[1], res[2]];\n        console.log(authorName);\n        setData(tweets);\n        setCloudText(wordCloudtext);\n        setsuccessfulQuery(true);\n        setCurrentlyReading(true);\n        setAuthorName(authorName); //console.log(wordCloudtext.length);\n\n        setLoading(false);\n      } else {\n        setsuccessfulQuery(false);\n\n        if (res.hasOwnProperty(\"notFound\")) {\n          //console.log(\"not an array\") // account not found \n          //console.log(res)\n          setData(res.notFound);\n          setCloudText([]); // reset cloud \n\n          setsuccessfulQuery(false);\n          setLoading(false); //setPresentIssueMsg(true)\n        } else {\n          //account exists but follows no one \n          //console.log(\"follows no one\")\n          setData(\"0\");\n          setCloudText([]); // reset cloud \n\n          setsuccessfulQuery(false);\n          setAuthorName(res.authorName);\n          setLoading(false); //setPresentIssueMsg(true)\n        }\n      }\n    });\n  };\n\n  const returnFromCurrentlyViewing = newStatus => {\n    //console.log(\"changed view\")\n    setCurrentlyReading(newStatus);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: appCSS === \"App\" ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        direction: \"column\",\n        style: {\n          margin: 0,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(HomeBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 12,\n          style: {\n            margin: \"0\"\n          },\n          children: currentlyReading ? /*#__PURE__*/_jsxDEV(CurrentlyViewing, {\n            authorName: authorName,\n            changeStatus: returnFromCurrentlyViewing,\n            status: currentlyReading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Input, {\n            handleInput: handleInput,\n            loadingStatus: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            padding: \"0px\"\n          },\n          children: cloudText.length > 0 && currentlyReading ? /*#__PURE__*/_jsxDEV(CloudBtn, {\n            returnClickToParent: manageCloudInit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 57\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [!successfulQuery ? /*#__PURE__*/_jsxDEV(SearchFailed, {\n            authorName: authorName,\n            issue: data,\n            goBack: returnFromCurrentlyViewing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this) : null, currentlyReading ? /*#__PURE__*/_jsxDEV(\"section\", {\n            children: /*#__PURE__*/_jsxDEV(TwitterResults, {\n              results: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CloudApp\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(BackBtn, {\n            handler: handleBackBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MyCloud, {\n            text: cloudText,\n            authorName: authorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kPgKNHlkAXt7Tst4iriK8oaZmio=\");\n\n_c = App;\nexport default App; // {cloudWanted ? <MyCloud text={cloudText} /> : null}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Enter-the-Echo-Chamber/client/src/App.js"],"names":["React","Grid","Instructions","Input","TwitterResults","MyCloud","CloudBtn","BackBtn","SearchFailed","CurrentlyViewing","HomeBtn","BrowserRouter","Router","App","loading","setLoading","useState","authorName","setAuthorName","data","setData","cloudText","setCloudText","appCSS","setAppCSS","successfulQuery","setsuccessfulQuery","currentlyReading","setCurrentlyReading","manageCloudInit","status","handleBackBtn","handleInput","submittedName","fetch","then","res","json","Array","isArray","tweets","wordCloudtext","console","log","hasOwnProperty","notFound","returnFromCurrentlyViewing","newStatus","margin","width","padding","length"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Instructions from \"./components/instructions/instructions\"\nimport Input from \"./components/input/input\"\nimport TwitterResults from \"./components/twitterResults/twitterResults\"\nimport MyCloud from \"./components/wordcloud/wordcloud\"\nimport CloudBtn from \"./components/wordcloud/initcloudbtn\"\nimport BackBtn from \"./components/backbtn/backbtn\"\nimport SearchFailed from \"./components/notfound/searchfailed\"\nimport CurrentlyViewing from './components/currentlyviewing/currentlyviewing';\nimport HomeBtn from './components/homebtn/homebtn';\n\n\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [loading, setLoading] = React.useState(false); // handle name\n\n  const [authorName, setAuthorName] = React.useState(null);\n\n  const [data, setData] = React.useState([\"No Tweets\"]);\n\n  const [cloudText, setCloudText] = React.useState([]);\n\n  const [appCSS, setAppCSS] = React.useState(\"App\")\n\n  const [successfulQuery, setsuccessfulQuery] = React.useState(true);\n\n  const [currentlyReading, setCurrentlyReading] = React.useState(false);\n\n\n  const manageCloudInit = (status) => {\n    //console.log(status)\n    status ? setAppCSS(\"CloudApp\") : setAppCSS(\"App\")\n    //return (status ? \"show cloud\" : \"don't show\")\n  }\n\n  const handleBackBtn = () => {\n    setAppCSS(\"App\")\n  }\n\n  const handleInput = (submittedName) => {\n    setLoading(true);\n    setsuccessfulQuery(true);\n    //.log(submittedName);\n\n\n    //console.log(\"Making request\")\n\n    fetch(`/api/users/${submittedName}`) //user=${submittedName}`\n      .then((res) => res.json())\n      .then(res => {\n        //console.log(\"yo\")\n        if (Array.isArray(res)) { // successful query with followers\n\n          const [tweets, wordCloudtext, authorName] = [res[0], res[1], res[2]];\n          console.log(authorName)\n\n          setData(tweets)\n          setCloudText(wordCloudtext)\n          setsuccessfulQuery(true);\n          setCurrentlyReading(true);\n          setAuthorName(authorName)\n          //console.log(wordCloudtext.length);\n          setLoading(false);\n\n        } else {\n          setsuccessfulQuery(false);\n          if (res.hasOwnProperty(\"notFound\")) {\n            //console.log(\"not an array\") // account not found \n            //console.log(res)\n            setData(res.notFound)\n            setCloudText([]); // reset cloud \n            setsuccessfulQuery(false);\n            setLoading(false);\n            //setPresentIssueMsg(true)\n          } else { //account exists but follows no one \n            //console.log(\"follows no one\")\n            setData(\"0\")\n            setCloudText([]); // reset cloud \n            setsuccessfulQuery(false);\n            setAuthorName(res.authorName)\n            setLoading(false);\n            //setPresentIssueMsg(true)\n          }\n\n        }\n\n      })\n\n  }\n\n  const returnFromCurrentlyViewing = (newStatus) => {\n    //console.log(\"changed view\")\n    setCurrentlyReading(newStatus)\n  }\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {appCSS === \"App\" ? <Grid container spacing={4} direction=\"column\" style={{\n          margin: 0,\n          width: '100%',\n        }}>\n\n          <HomeBtn />\n          <Grid item lg={12}>\n            <Instructions />\n          </Grid>\n\n          <Grid item lg={12} style={{ margin: \"0\" }}>\n            {currentlyReading ? <CurrentlyViewing authorName={authorName} changeStatus={returnFromCurrentlyViewing}\n              status={currentlyReading}\n            />\n              :\n              < Input handleInput={handleInput} loadingStatus={loading} />}\n\n          </Grid>\n\n\n          <Grid item style={{ padding: \"0px\" }} >\n            {cloudText.length > 0 && currentlyReading ? <CloudBtn returnClickToParent={manageCloudInit} /> : null}\n          </Grid>\n\n\n          <Grid item >\n            {!successfulQuery ? <SearchFailed authorName={authorName}\n              issue={data} goBack={returnFromCurrentlyViewing}\n            /> : null}\n            {currentlyReading ? <section>\n              <TwitterResults results={data} />\n            </section> : null}\n          </Grid>\n\n        </Grid> :\n          <div className=\"CloudApp\">\n            <div>\n              <BackBtn handler={handleBackBtn} />\n            </div>\n            <div>\n              <MyCloud text={cloudText} authorName={authorName} />\n            </div>\n          </div>\n\n        }\n\n      </div >\n    </Router>\n  );\n}\n\nexport default App;\n\n// {cloudWanted ? <MyCloud text={cloudText} /> : null}"]},"metadata":{},"sourceType":"module"}