{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/twitterResults/twitterResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./twitterResults.css\";\nimport CollapseButton from \"../minimize/minimize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TwitterResults = props => {\n  _s();\n\n  // console.log(\"Hi I am Spaced out\".trim())\n  const tweets = props.results;\n  const [btnStatus, setBtnStatus] = useState(true); // defaults to plus where content is shown\n\n  const content = useRef(\"\");\n  const [height, setHeight] = useState(content.current.scrollHeight);\n\n  const changeBtnStatus = () => {\n    setBtnStatus(!btnStatus); // console.log(btnStatus)\n    //console.log(content.current.scrollHeight)\n    //console.log(height);\n  };\n\n  useEffect(() => {\n    setHeight(btnStatus ? `${content.current.scrollHeight}px` : `0px`);\n  }, [btnStatus]);\n\n  const convertNameToUrl = handle => {\n    // console.log(handle)\n    if (handle === undefined) {\n      return \"\";\n    } else {\n      const urlReadyHandle = handle.replace(/\\s+/g, '').toLowerCase(); //const urlReadyName = authorName.trim().toLowerCase()\n      //console.log(`https://twitter.com/${urlReadyName}`)\n\n      return \"https://twitter.com/\" + urlReadyHandle;\n    }\n  };\n\n  const displayTweets = tweets.map(tweet => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweetDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: convertNameToUrl(tweet.username),\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"author\",\n            children: tweet.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tweetText\",\n            children: [tweet.text, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              padding: \"10px\",\n              opacity: \".7\"\n            },\n            children: [tweet.timeElapsed, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, tweets.indexOf(tweet).toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }); //console.log(props.results)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.results[0] !== \"No Tweets\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: content,\n        style: {\n          maxHeight: `${height}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: displayTweets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"2em\",\n        color: \"#89EBCF\"\n      },\n      children: \" ......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TwitterResults, \"suUvxL1NrjRMvIZisDNVnJAo1MU=\");\n\n_c = TwitterResults;\nexport default TwitterResults; //paddingRight: \"40px\" \n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterResults\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/twitterResults/twitterResults.js"],"names":["React","useState","useRef","useEffect","CollapseButton","TwitterResults","props","tweets","results","btnStatus","setBtnStatus","content","height","setHeight","current","scrollHeight","changeBtnStatus","convertNameToUrl","handle","undefined","urlReadyHandle","replace","toLowerCase","displayTweets","map","tweet","username","author","text","padding","opacity","timeElapsed","indexOf","toString","maxHeight","fontSize","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,sBAAP;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B;AAEA,QAAMC,MAAM,GAAGD,KAAK,CAACE,OAArB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C,CAN8B,CAMmB;;AAEjD,QAAMU,OAAO,GAAGT,MAAM,CAAC,EAAD,CAAtB;AAEA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAACU,OAAO,CAACG,OAAR,CAAgBC,YAAjB,CAApC;;AAGA,QAAMC,eAAe,GAAG,MAAM;AAC1BN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ,CAD0B,CAE1B;AACA;AACA;AAEH,GAND;;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS,CAACJ,SAAS,GAAI,GAAEE,OAAO,CAACG,OAAR,CAAgBC,YAAa,IAAnC,GAA0C,KAApD,CAAT;AACH,GAFQ,EAEN,CAACN,SAAD,CAFM,CAAT;;AAKA,QAAMQ,gBAAgB,GAAIC,MAAD,IAAY;AACjC;AACA,QAAIA,MAAM,KAAKC,SAAf,EAA0B;AACtB,aAAQ,EAAR;AACH,KAFD,MAEO;AACH,YAAMC,cAAc,GAAGF,MAAM,CAACG,OAAP,CAAe,MAAf,EAAuB,EAAvB,EAA2BC,WAA3B,EAAvB,CADG,CAEH;AACA;;AACA,aAAO,yBAAyBF,cAAhC;AACH;AAEJ,GAXD;;AAaA,QAAMG,aAAa,GAAGhB,MAAM,CAACiB,GAAP,CAAYC,KAAD,IAAW;AAExC,wBACI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,6BACI;AAAG,QAAA,IAAI,EAAER,gBAAgB,CAACQ,KAAK,CAACC,QAAP,CAAzB;AAA2C,QAAA,MAAM,EAAC,QAAlD;AAA2D,QAAA,GAAG,EAAC,YAA/D;AAAA,+BACI;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,sBAAuBD,KAAK,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,uBAA0BF,KAAK,CAACG,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAG,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,OAAO,EAAE;AAA5B,aAAV;AAAA,uBAA+CL,KAAK,CAACM,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,OAAgCxB,MAAM,CAACyB,OAAP,CAAeP,KAAf,EAAsBQ,QAAtB,EAAhC;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH,GAdqB,CAAtB,CAvC8B,CAwD9B;;AAEA,sBACI;AAAA,cAGQ3B,KAAK,CAACE,OAAN,CAAc,CAAd,MAAqB,WAArB,gBACI;AAAA,6BAGI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEG,OAAhC;AACI,QAAA,KAAK,EAAE;AAAEuB,UAAAA,SAAS,EAAG,GAAEtB,MAAO;AAAvB,SADX;AAAA,+BAGI;AAAA,oBACKW;AADL;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADJ,gBAcI;AAAG,MAAA,KAAK,EAAE;AAAEY,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAlFD;;GAAM/B,c;;KAAAA,c;AAoFN,eAAeA,cAAf,C,CAGA","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./twitterResults.css\"\nimport CollapseButton from \"../minimize/minimize\"\n\n\nconst TwitterResults = (props) => {\n\n    // console.log(\"Hi I am Spaced out\".trim())\n\n    const tweets = props.results;\n\n    const [btnStatus, setBtnStatus] = useState(true) // defaults to plus where content is shown\n\n    const content = useRef(\"\");\n\n    const [height, setHeight] = useState(content.current.scrollHeight);\n\n\n    const changeBtnStatus = () => {\n        setBtnStatus(!btnStatus)\n        // console.log(btnStatus)\n        //console.log(content.current.scrollHeight)\n        //console.log(height);\n\n    }\n\n    useEffect(() => {\n        setHeight(btnStatus ? `${content.current.scrollHeight}px` : `0px`)\n    }, [btnStatus])\n\n\n    const convertNameToUrl = (handle) => {\n        // console.log(handle)\n        if (handle === undefined) {\n            return (\"\")\n        } else {\n            const urlReadyHandle = handle.replace(/\\s+/g, '').toLowerCase();\n            //const urlReadyName = authorName.trim().toLowerCase()\n            //console.log(`https://twitter.com/${urlReadyName}`)\n            return \"https://twitter.com/\" + urlReadyHandle\n        }\n\n    }\n\n    const displayTweets = tweets.map((tweet) => {\n\n        return (\n            < div className=\"tweetDiv\" key={tweets.indexOf(tweet).toString()} >\n                <a href={convertNameToUrl(tweet.username)} target=\"_blank\" rel=\"noreferrer\">\n                    <li>\n                        <p className=\"author\">{tweet.author}</p>\n                        <p className=\"tweetText\">{tweet.text} </p>\n                        <p style={{ padding: \"10px\", opacity: \".7\" }}>{tweet.timeElapsed} </p>\n\n                    </li>\n                </a>\n            </div >\n        )\n    }\n    )\n\n    //console.log(props.results)\n\n    return (\n        <div>\n\n            {\n                props.results[0] !== \"No Tweets\" ?\n                    <div>\n\n\n                        <div className=\"container\" ref={content}\n                            style={{ maxHeight: `${height}` }}\n                        >\n                            <ul>\n                                {displayTweets}\n                            </ul>\n                        </div >\n\n                    </div>\n                    :\n                    <p style={{ fontSize: \"2em\", color: \"#89EBCF\" }}> ......</p>\n            }\n        </div >\n\n\n    )\n}\n\nexport default TwitterResults;\n\n\n//paddingRight: \"40px\" "]},"metadata":{},"sourceType":"module"}