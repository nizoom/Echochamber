{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Instructions from \"./components/instructions/instructions\";\nimport Input from \"./components/input/input\";\nimport TwitterResults from \"./components/twitterResults/twitterResults\";\nimport MyCloud from \"./components/wordcloud/wordcloud\";\nimport CloudBtn from \"./components/wordcloud/initcloudbtn\";\nimport BackBtn from \"./components/backbtn/backbtn\";\nimport SearchFailed from \"./components/notfound/searchfailed\";\nimport CurrentlyViewing from './components/currentlyviewing/currentlyviewing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = React.useState(null); // handle name\n\n  const [authorName, setAuthorName] = React.useState(null);\n  const [data, setData] = React.useState([\"No Tweets\"]);\n  const [cloudText, setCloudText] = React.useState([]);\n  const [appCSS, setAppCSS] = React.useState(\"App\");\n  const [successfulQuery, setsuccessfulQuery] = React.useState(true);\n  const [currentlyReading, setCurrentlyReading] = React.useState(false);\n\n  const manageCloudInit = status => {\n    console.log(status);\n    status ? setAppCSS(\"CloudApp\") : setAppCSS(\"App\"); //return (status ? \"show cloud\" : \"don't show\")\n  };\n\n  const handleBackBtn = () => {\n    setAppCSS(\"App\");\n  };\n\n  const handleInput = submittedName => {\n    console.log(submittedName);\n    setName(submittedName);\n    console.log(\"Making request\");\n    fetch(`/api/users/${submittedName}`) //user=${submittedName}`\n    .then(res => res.json()).then(res => {\n      console.log(\"yo\");\n\n      if (Array.isArray(res)) {\n        // successful query with followers\n        const [tweets, wordCloudtext, authorName] = [res[0], res[1], res[2]];\n        console.log(authorName);\n        setData(tweets);\n        setCloudText(wordCloudtext);\n        setsuccessfulQuery(true);\n        setCurrentlyReading(true);\n        setAuthorName(authorName);\n        console.log(wordCloudtext);\n      } else {\n        setsuccessfulQuery(false);\n\n        if (res.hasOwnProperty(\"notFound\")) {\n          console.log(\"not an array\"); // account not found \n\n          console.log(res);\n          setData(res.notFound);\n          setCloudText([]); // reset cloud \n\n          setsuccessfulQuery(false);\n        } else {\n          //account exists but follows no one \n          console.log(\"follows no one\");\n          setData(\"0\");\n          setCloudText([]); // reset cloud \n\n          setsuccessfulQuery(false);\n          setAuthorName(res.authorName);\n        }\n      }\n    });\n  };\n\n  const returnFromCurrentlyViewing = newStatus => {\n    console.log(\"changed view\");\n    setCurrentlyReading(newStatus);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: appCSS === \"App\" ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      direction: \"column\",\n      style: {\n        margin: 0,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 12,\n        style: {\n          margin: \"0\"\n        },\n        children: currentlyReading ? /*#__PURE__*/_jsxDEV(CurrentlyViewing, {\n          authorName: authorName,\n          changeStatus: returnFromCurrentlyViewing,\n          status: currentlyReading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Input, {\n          handleInput: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          padding: \"0px\"\n        },\n        children: cloudText.length > 0 && currentlyReading ? /*#__PURE__*/_jsxDEV(CloudBtn, {\n          returnClickToParent: manageCloudInit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 55\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [!successfulQuery ? /*#__PURE__*/_jsxDEV(SearchFailed, {\n          authorName: authorName,\n          issue: data,\n          goBack: returnFromCurrentlyViewing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 31\n        }, this) : null, currentlyReading ? /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(TwitterResults, {\n            results: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 31\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CloudApp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BackBtn, {\n          handler: handleBackBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MyCloud, {\n          text: cloudText,\n          authorName: authorName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Etj9GT8uTZi5Pg9i44kV54v7Rvw=\");\n\n_c = App;\nexport default App; // {cloudWanted ? <MyCloud text={cloudText} /> : null}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/App.js"],"names":["React","Grid","Instructions","Input","TwitterResults","MyCloud","CloudBtn","BackBtn","SearchFailed","CurrentlyViewing","App","name","setName","useState","authorName","setAuthorName","data","setData","cloudText","setCloudText","appCSS","setAppCSS","successfulQuery","setsuccessfulQuery","currentlyReading","setCurrentlyReading","manageCloudInit","status","console","log","handleBackBtn","handleInput","submittedName","fetch","then","res","json","Array","isArray","tweets","wordCloudtext","hasOwnProperty","notFound","returnFromCurrentlyViewing","newStatus","margin","width","padding","length"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react'\nimport Grid from '@material-ui/core/Grid';\n\nimport Instructions from \"./components/instructions/instructions\"\nimport Input from \"./components/input/input\"\nimport TwitterResults from \"./components/twitterResults/twitterResults\"\nimport MyCloud from \"./components/wordcloud/wordcloud\"\nimport CloudBtn from \"./components/wordcloud/initcloudbtn\"\nimport BackBtn from \"./components/backbtn/backbtn\"\nimport SearchFailed from \"./components/notfound/searchfailed\"\nimport CurrentlyViewing from './components/currentlyviewing/currentlyviewing';\n\n\nfunction App() {\n  const [name, setName] = React.useState(null); // handle name\n\n  const [authorName, setAuthorName] = React.useState(null);\n\n  const [data, setData] = React.useState([\"No Tweets\"]);\n\n  const [cloudText, setCloudText] = React.useState([]);\n\n  const [appCSS, setAppCSS] = React.useState(\"App\")\n\n  const [successfulQuery, setsuccessfulQuery] = React.useState(true);\n\n  const [currentlyReading, setCurrentlyReading] = React.useState(false);\n\n  const manageCloudInit = (status) => {\n    console.log(status)\n    status ? setAppCSS(\"CloudApp\") : setAppCSS(\"App\")\n    //return (status ? \"show cloud\" : \"don't show\")\n  }\n\n  const handleBackBtn = () => {\n    setAppCSS(\"App\")\n  }\n\n  const handleInput = (submittedName) => {\n    console.log(submittedName);\n    setName(submittedName);\n\n    console.log(\"Making request\")\n\n    fetch(`/api/users/${submittedName}`) //user=${submittedName}`\n      .then((res) => res.json())\n      .then(res => {\n        console.log(\"yo\")\n        if (Array.isArray(res)) { // successful query with followers\n\n          const [tweets, wordCloudtext, authorName] = [res[0], res[1], res[2]];\n          console.log(authorName)\n\n          setData(tweets)\n          setCloudText(wordCloudtext)\n          setsuccessfulQuery(true);\n          setCurrentlyReading(true);\n          setAuthorName(authorName)\n          console.log(wordCloudtext);\n        } else {\n          setsuccessfulQuery(false);\n          if (res.hasOwnProperty(\"notFound\")) {\n            console.log(\"not an array\") // account not found \n            console.log(res)\n            setData(res.notFound)\n            setCloudText([]); // reset cloud \n            setsuccessfulQuery(false);\n          } else { //account exists but follows no one \n            console.log(\"follows no one\")\n            setData(\"0\")\n            setCloudText([]); // reset cloud \n            setsuccessfulQuery(false);\n            setAuthorName(res.authorName)\n          }\n\n        }\n\n      })\n\n  }\n\n  const returnFromCurrentlyViewing = (newStatus) => {\n    console.log(\"changed view\")\n    setCurrentlyReading(newStatus)\n  }\n\n\n  return (\n    <div className=\"App\">\n      {appCSS === \"App\" ? <Grid container spacing={4} direction=\"column\" style={{\n        margin: 0,\n        width: '100%',\n      }}>\n\n\n        <Grid item lg={12}>\n          <Instructions />\n        </Grid>\n\n        <Grid item lg={12} style={{ margin: \"0\" }}>\n          {currentlyReading ? <CurrentlyViewing authorName={authorName} changeStatus={returnFromCurrentlyViewing}\n            status={currentlyReading}\n          />\n            : <Input handleInput={handleInput} />}\n        </Grid>\n\n        <Grid item style={{ padding: \"0px\" }} >\n          {cloudText.length > 0 && currentlyReading ? <CloudBtn returnClickToParent={manageCloudInit} /> : null}\n        </Grid>\n\n\n        <Grid item >\n          {!successfulQuery ? <SearchFailed authorName={authorName}\n            issue={data} goBack={returnFromCurrentlyViewing}\n          /> : null}\n          {currentlyReading ? <section>\n            <TwitterResults results={data} />\n          </section> : null}\n        </Grid>\n\n      </Grid> :\n        <div className=\"CloudApp\">\n          <div>\n            <BackBtn handler={handleBackBtn} />\n          </div>\n          <div>\n            <MyCloud text={cloudText} authorName={authorName} />\n          </div>\n        </div>\n\n      }\n\n    </div >\n  );\n}\n\nexport default App;\n\n// {cloudWanted ? <MyCloud text={cloudText} /> : null}"]},"metadata":{},"sourceType":"module"}