{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/wordcloud/wordcloud.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport \"./wordcloud.css\";\nimport gif from \"./../../media/tweetgifv7.gif\";\nimport Grid from '@material-ui/core/Grid';\nimport ToolTip from \"./../tooltip/tooltip\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyCloud = props => {\n  _s();\n\n  const theme = createMuiTheme();\n  theme.typography.h2 = {\n    fontSize: '2rem',\n    '@media (min-width:600px)': {\n      fontSize: '2.5rem'\n    },\n    [theme.breakpoints.up('md')]: {\n      fontSize: '3rem'\n    }\n  };\n  const [clicked, setClick] = React.useState(false);\n\n  const activateToolTip = () => {\n    setClick(!clicked);\n  }; // const determineFrequency = (frequency) => {\n  // }\n\n\n  const setFontSize = frequency => {\n    const width = window.innerWidth;\n    checkForShove();\n    const small = 500; //px\n\n    const medium = 700;\n    const large = 1000;\n    let currentSize = 0;\n    const freq = frequency > 10 ? 10 : frequency;\n\n    if (width > large) {\n      //if large \n      currentSize = large;\n      const fontSize = currentSize / 100 * freq; //console.log(`${fontSize} , ${freq}`)\n\n      return `${fontSize}px`;\n    }\n\n    if (width > medium && width < large) {\n      //if medium  (btw 700 and 1000)\n      currentSize = medium;\n      const fontSize = currentSize / 300 * freq;\n      console.log(`rendered ${fontSize} , ${freq}`);\n      return `${fontSize}px`;\n    }\n\n    if (width < medium) {\n      //if small \n      currentSize = small;\n      const fontSize = currentSize / 100 * freq;\n      return `${fontSize}px`;\n    }\n  }; // setFontSize(droplet.frequency)\n\n\n  function debounce(fn, ms) {\n    let timer;\n    return _ => {\n      clearTimeout(timer);\n      timer = setTimeout(_ => {\n        timer = null;\n        fn.apply(this, arguments);\n      }, ms);\n    };\n  } //RERENDERING FOR WINDOW CHANGE\n\n\n  const [dimensions, setDimensions] = React.useState({\n    height: window.innerHeight,\n    width: window.innerWidth\n  });\n  React.useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth\n      });\n    }, 1000);\n    window.addEventListener('resize', debouncedHandleResize);\n    return _ => {\n      window.removeEventListener('resize', debouncedHandleResize);\n    };\n  });\n  const [shoveDown, setShoveDown] = React.useState(false);\n  const [counter, setCounter] = React.useState(0);\n\n  const checkForShove = () => {\n    console.log(counter);\n\n    if (counter > 300 && window.innerWidth < 400) {\n      setShoveDown(true);\n    }\n  }; //{checkForShove}\n\n\n  const droplets = props.text.map(droplet =>\n  /*#__PURE__*/\n  //setCounter(counter + droplet.frequency),\n  _jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ToolTip, {\n      word: droplet.word,\n      frequency: droplet.frequency,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"droplet\",\n        style: {\n          fontSize: setFontSize(droplet.frequency),\n          fontWeight: \"700\",\n          paddingLeft: \"2px\",\n          paddingRight: \"2px\"\n        },\n        onClick: activateToolTip,\n        children: [\"  \", droplet.word]\n      }, props.text.indexOf(droplet), true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, props.text.indexOf(droplet), false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this)); // console.log(props.text)\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 1,\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cloudWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cloudTitle\",\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            children: [\" Word Cloud of what \", props.authorName, \" sees \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outerContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: gif,\n          alt: \"tweetGif\",\n          style: {\n            borderRadius: \"16px\",\n            float: \"left\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cloud\",\n          style: shoveDown ? {\n            marginTop: \"500px\"\n          } : null,\n          children: droplets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}; // {droplets}\n\n\n_s(MyCloud, \"uZG37BpRJ+aWbgF1SdgfQOW0zwc=\");\n\n_c = MyCloud;\nexport default MyCloud; //{droplets}\n// <img src={gif} alt=\"tweetGif\" />\n//<img src={gif} alt=\"tweetGif\">  </img>\n//border: \"solid\", borderColor: \"black\", borderWidth: \".5px\",\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCloud\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/wordcloud/wordcloud.js"],"names":["React","Typography","gif","Grid","ToolTip","createMuiTheme","ThemeProvider","MyCloud","props","theme","typography","h2","fontSize","breakpoints","up","clicked","setClick","useState","activateToolTip","setFontSize","frequency","width","window","innerWidth","checkForShove","small","medium","large","currentSize","freq","console","log","debounce","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","dimensions","setDimensions","height","innerHeight","useEffect","debouncedHandleResize","handleResize","addEventListener","removeEventListener","shoveDown","setShoveDown","counter","setCounter","droplets","text","map","droplet","word","fontWeight","paddingLeft","paddingRight","indexOf","authorName","borderRadius","float","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport \"./wordcloud.css\"\nimport gif from \"./../../media/tweetgifv7.gif\"\nimport Grid from '@material-ui/core/Grid';\nimport ToolTip from \"./../tooltip/tooltip\"\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n\n\nconst MyCloud = (props) => {\n\n    const theme = createMuiTheme();\n\n    theme.typography.h2 = {\n        fontSize: '2rem',\n        '@media (min-width:600px)': {\n            fontSize: '2.5rem',\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '3rem',\n        },\n    };\n\n    const [clicked, setClick] = React.useState(false)\n\n    const activateToolTip = () => {\n        setClick(!clicked)\n    }\n\n    // const determineFrequency = (frequency) => {\n\n    // }\n    const setFontSize = (frequency) => {\n\n        const width = window.innerWidth\n        checkForShove();\n        const small = 500 //px\n        const medium = 700\n        const large = 1000\n        let currentSize = 0;\n        const freq = frequency > 10 ? 10 : frequency\n\n        if (width > large) { //if large \n            currentSize = large;\n\n            const fontSize = currentSize / 100 * freq\n            //console.log(`${fontSize} , ${freq}`)\n            return `${fontSize}px`\n\n        }\n        if (width > medium && width < large) { //if medium  (btw 700 and 1000)\n            currentSize = medium;\n            const fontSize = currentSize / 300 * freq\n            console.log(`rendered ${fontSize} , ${freq}`)\n            return `${fontSize}px`\n        }\n\n        if (width < medium) { //if small \n            currentSize = small;\n            const fontSize = currentSize / 100 * freq\n            return `${fontSize}px`\n        }\n\n    }\n\n    // setFontSize(droplet.frequency)\n\n    function debounce(fn, ms) {\n        let timer\n        return _ => {\n            clearTimeout(timer)\n            timer = setTimeout(_ => {\n                timer = null\n                fn.apply(this, arguments)\n            }, ms)\n        };\n    }\n\n\n\n\n    //RERENDERING FOR WINDOW CHANGE\n\n    const [dimensions, setDimensions] = React.useState({\n        height: window.innerHeight,\n        width: window.innerWidth\n    })\n    React.useEffect(() => {\n        const debouncedHandleResize = debounce(function handleResize() {\n            setDimensions({\n                height: window.innerHeight,\n                width: window.innerWidth\n            })\n        }, 1000)\n\n        window.addEventListener('resize', debouncedHandleResize)\n        return _ => {\n            window.removeEventListener('resize', debouncedHandleResize)\n\n        }\n    })\n\n\n\n\n    const [shoveDown, setShoveDown] = React.useState(false)\n\n    const [counter, setCounter] = React.useState(0)\n\n\n    const checkForShove = () => {\n        console.log(counter)\n        if (counter > 300 && window.innerWidth < 400) {\n            setShoveDown(true);\n        }\n    }\n\n    //{checkForShove}\n\n    const droplets = props.text.map((droplet) => (\n\n        //setCounter(counter + droplet.frequency),\n\n        < div key={props.text.indexOf(droplet)} >\n            <ToolTip word={droplet.word} frequency={droplet.frequency}>\n                <div key={props.text.indexOf(droplet)} className=\"droplet\"\n                    style={{ fontSize: setFontSize(droplet.frequency), fontWeight: \"700\", paddingLeft: \"2px\", paddingRight: \"2px\" }}\n                    onClick={activateToolTip}\n\n                >  {droplet.word}\n                </div>\n\n            </ToolTip>\n\n\n\n        </div >\n\n\n    ))\n\n    // console.log(props.text)\n\n\n    return (\n        <Grid container direction=\"column\" spacing={1} justify=\"center\">\n            <div className=\"cloudWrapper\" >\n\n                <div className=\"cloudTitle\">\n                    <ThemeProvider theme={theme}>\n                        <Typography variant=\"h2\"> Word Cloud of what {props.authorName} sees </Typography>\n                    </ThemeProvider>\n                </div>\n\n\n                <div className=\"outerContainer\">\n\n                    <img src={gif} alt=\"tweetGif\" style={{ borderRadius: \"16px\", float: \"left\" }} />\n\n\n\n                    <div className=\"cloud\" style={shoveDown ? { marginTop: \"500px\" } : null} >\n\n                        {droplets}\n                    </div>\n                </div>\n\n\n\n            </div >\n        </Grid >\n    );\n\n}\n// {droplets}\n\nexport default MyCloud;\n\n//{droplets}\n\n// <img src={gif} alt=\"tweetGif\" />\n\n//<img src={gif} alt=\"tweetGif\">  </img>\n\n//border: \"solid\", borderColor: \"black\", borderWidth: \".5px\",\n\n\n\n"]},"metadata":{},"sourceType":"module"}