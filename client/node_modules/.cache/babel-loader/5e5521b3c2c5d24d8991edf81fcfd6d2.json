{"ast":null,"code":"var _jsxFileName = \"/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/twitterResults/twitterResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./twitterResults.css\";\nimport CollapseButton from \"../minimize/minimize\";\nimport { Collapse } from 'react-collapse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TwitterResults = props => {\n  _s();\n\n  const tweets = props.results;\n  const [btnStatus, setBtnStatus] = useState(true); // defaults to plus \n\n  const changeBtnStatus = () => {\n    setBtnStatus(!btnStatus);\n  };\n\n  const displayTweets = tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"author\",\n        children: tweet.authorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tweetText\",\n        children: [tweet.text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          padding: \"10px\",\n          opacity: \".7\"\n        },\n        children: [tweet.timeSince, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, tweets.indexOf(tweet).toString(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this));\n  console.log(props.results);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.results[0] !== \"No Tweets\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CollapseButton, {\n        btnClicked: changeBtnStatus,\n        status: btnStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        isOpened: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: btnStatus ? \"container\" : \"collapsed\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\"\n            },\n            children: displayTweets\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"2em\",\n        color: \"#89EBCF\"\n      },\n      children: \" ......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TwitterResults, \"OpBsBBEZx53yVvtBSOwow88mE68=\");\n\n_c = TwitterResults;\nexport default TwitterResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterResults\");","map":{"version":3,"sources":["/Users/nissimram/Desktop/Programming/Twitter Project/twitter-project/client/src/components/twitterResults/twitterResults.js"],"names":["React","useState","CollapseButton","Collapse","TwitterResults","props","tweets","results","btnStatus","setBtnStatus","changeBtnStatus","displayTweets","map","tweet","authorName","text","padding","opacity","timeSince","indexOf","toString","console","log","display","flexDirection","flexWrap","justifyContent","fontSize","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sBAAP;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAG9B,QAAMC,MAAM,GAAGD,KAAK,CAACE,OAArB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C,CAL8B,CAKmB;;AAEjD,QAAMS,eAAe,GAAG,MAAM;AAC1BD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAKA,QAAMG,aAAa,GAAGL,MAAM,CAACM,GAAP,CAAYC,KAAD,iBAE7B;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BAGI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA,kBAAuBA,KAAK,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,mBAA0BD,KAAK,CAACE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,OAAO,EAAE;AAA5B,SAAV;AAAA,mBAA+CJ,KAAK,CAACK,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,KAA+BZ,MAAM,CAACa,OAAP,CAAeN,KAAf,EAAsBO,QAAtB,EAA/B;AAAA;AAAA;AAAA;AAAA,UAFkB,CAAtB;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACE,OAAlB;AACA,sBACI;AAAA,cAGQF,KAAK,CAACE,OAAN,CAAc,CAAd,MAAqB,WAArB,gBACI;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,UAAU,EAAEG,eAA5B;AAA6C,QAAA,MAAM,EAAEF;AAArD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,IAApB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAEA,SAAS,GAAG,WAAH,GAAiB,WAA1C;AAAA,iCACI;AAAI,YAAA,KAAK,EAAE;AACPe,cAAAA,OAAO,EAAE,MADF;AACUC,cAAAA,aAAa,EAAE,KADzB;AACgCC,cAAAA,QAAQ,EAAE,MAD1C;AAEPC,cAAAA,cAAc,EAAE;AAFT,aAAX;AAAA,sBAIKf;AAJL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,gBAeI;AAAG,MAAA,KAAK,EAAE;AAAEgB,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CApDD;;GAAMxB,c;;KAAAA,c;AAsDN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./twitterResults.css\"\nimport CollapseButton from \"../minimize/minimize\"\nimport { Collapse } from 'react-collapse';\n\nconst TwitterResults = (props) => {\n\n\n    const tweets = props.results;\n\n    const [btnStatus, setBtnStatus] = useState(true) // defaults to plus \n\n    const changeBtnStatus = () => {\n        setBtnStatus(!btnStatus)\n    }\n\n\n    const displayTweets = tweets.map((tweet) =>\n\n        <div className=\"tweetDiv\" key={tweets.indexOf(tweet).toString()}\n\n        >\n            <li>\n                <p className=\"author\">{tweet.authorName}</p>\n                <p className=\"tweetText\">{tweet.text} </p>\n                <p style={{ padding: \"10px\", opacity: \".7\" }}>{tweet.timeSince} </p>\n\n            </li>\n        </div>\n    )\n\n    console.log(props.results)\n    return (\n        <div>\n\n            {\n                props.results[0] !== \"No Tweets\" ?\n                    <div>\n                        <CollapseButton btnClicked={changeBtnStatus} status={btnStatus} />\n                        <Collapse isOpened={true}>\n                            <div className={btnStatus ? \"container\" : \"collapsed\"}>\n                                <ul style={{\n                                    display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\",\n                                    justifyContent: \"space-between\"\n                                }}>\n                                    {displayTweets}\n                                </ul>\n                            </div >\n                        </Collapse>\n                    </div>\n                    :\n                    <p style={{ fontSize: \"2em\", color: \"#89EBCF\" }}> ......</p>\n            }\n        </div >\n\n\n    )\n}\n\nexport default TwitterResults;"]},"metadata":{},"sourceType":"module"}